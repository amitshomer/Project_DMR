Base_Img_to_Mesh(
  (point_cloud_encoder): PointNet(
    (conv1): Conv1d(3, 64, kernel_size=(1,), stride=(1,))
    (conv2): Conv1d(64, 128, kernel_size=(1,), stride=(1,))
    (conv3): Conv1d(128, 1024, kernel_size=(1,), stride=(1,))
    (bn1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (bn2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (bn3): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (linear): Linear(in_features=1024, out_features=1024, bias=True)
    (bn4): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (img_endoer): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (avgpool): AvgPool2d(kernel_size=7, stride=7, padding=0)
    (fc): Linear(in_features=512, out_features=1024, bias=True)
  )
  (encoder): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (avgpool): AvgPool2d(kernel_size=7, stride=7, padding=0)
    (fc): Linear(in_features=512, out_features=1024, bias=True)
  )
  (deformNet1): DeformNet(
    (conv1): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
    (conv2): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
    (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
)
Base_Img_to_Mesh(
  (point_cloud_encoder): PointNet(
    (conv1): Conv1d(3, 64, kernel_size=(1,), stride=(1,))
    (conv2): Conv1d(64, 128, kernel_size=(1,), stride=(1,))
    (conv3): Conv1d(128, 1024, kernel_size=(1,), stride=(1,))
    (bn1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (bn2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (bn3): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (linear): Linear(in_features=1024, out_features=1024, bias=True)
    (bn4): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (img_endoer): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (avgpool): AvgPool2d(kernel_size=7, stride=7, padding=0)
    (fc): Linear(in_features=512, out_features=1024, bias=True)
  )
  (encoder): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (avgpool): AvgPool2d(kernel_size=7, stride=7, padding=0)
    (fc): Linear(in_features=512, out_features=1024, bias=True)
  )
  (deformNet1): DeformNet(
    (conv1): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
    (conv2): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
    (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
)
Base_Img_to_Mesh(
  (point_cloud_encoder): PointNet(
    (conv1): Conv1d(3, 64, kernel_size=(1,), stride=(1,))
    (conv2): Conv1d(64, 128, kernel_size=(1,), stride=(1,))
    (conv3): Conv1d(128, 1024, kernel_size=(1,), stride=(1,))
    (bn1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (bn2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (bn3): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (linear): Linear(in_features=1024, out_features=1024, bias=True)
    (bn4): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (img_endoer): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (avgpool): AvgPool2d(kernel_size=7, stride=7, padding=0)
    (fc): Linear(in_features=512, out_features=1024, bias=True)
  )
  (encoder): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (avgpool): AvgPool2d(kernel_size=7, stride=7, padding=0)
    (fc): Linear(in_features=512, out_features=1024, bias=True)
  )
  (deformNet1): DeformNet(
    (conv1): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
    (conv2): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
    (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
)
Base_Img_to_Mesh(
  (point_cloud_encoder): PointNet(
    (conv1): Conv1d(3, 64, kernel_size=(1,), stride=(1,))
    (conv2): Conv1d(64, 128, kernel_size=(1,), stride=(1,))
    (conv3): Conv1d(128, 1024, kernel_size=(1,), stride=(1,))
    (bn1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (bn2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (bn3): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (linear): Linear(in_features=1024, out_features=1024, bias=True)
    (bn4): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (img_endoer): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (avgpool): AvgPool2d(kernel_size=7, stride=7, padding=0)
    (fc): Linear(in_features=512, out_features=1024, bias=True)
  )
  (encoder): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (avgpool): AvgPool2d(kernel_size=7, stride=7, padding=0)
    (fc): Linear(in_features=512, out_features=1024, bias=True)
  )
  (deformNet1): DeformNet(
    (conv1): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
    (conv2): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
    (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
)
Base_Img_to_Mesh(
  (point_cloud_encoder): PointNet(
    (conv1): Conv1d(3, 64, kernel_size=(1,), stride=(1,))
    (conv2): Conv1d(64, 128, kernel_size=(1,), stride=(1,))
    (conv3): Conv1d(128, 1024, kernel_size=(1,), stride=(1,))
    (bn1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (bn2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (bn3): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (linear): Linear(in_features=1024, out_features=1024, bias=True)
    (bn4): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (img_endoer): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (avgpool): AvgPool2d(kernel_size=7, stride=7, padding=0)
    (fc): Linear(in_features=512, out_features=1024, bias=True)
  )
  (encoder): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (avgpool): AvgPool2d(kernel_size=7, stride=7, padding=0)
    (fc): Linear(in_features=512, out_features=1024, bias=True)
  )
  (deformNet1): DeformNet(
    (conv1): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
    (conv2): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
    (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
)
Base_Img_to_Mesh(
  (point_cloud_encoder): PointNet(
    (conv1): Conv1d(3, 64, kernel_size=(1,), stride=(1,))
    (conv2): Conv1d(64, 128, kernel_size=(1,), stride=(1,))
    (conv3): Conv1d(128, 1024, kernel_size=(1,), stride=(1,))
    (bn1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (bn2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (bn3): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (linear): Linear(in_features=1024, out_features=1024, bias=True)
    (bn4): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (img_endoer): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (avgpool): AvgPool2d(kernel_size=7, stride=7, padding=0)
    (fc): Linear(in_features=512, out_features=1024, bias=True)
  )
  (encoder): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (avgpool): AvgPool2d(kernel_size=7, stride=7, padding=0)
    (fc): Linear(in_features=512, out_features=1024, bias=True)
  )
  (deformNet1): DeformNet(
    (conv1): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
    (conv2): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
    (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
)
json_stats: {"train_loss": 0.11839335514780353, "val_loss": 0.03319761226343554, "epoch": 0, "lr": 0.001, "super_points": 2500, "chair": 0.03319761226343554}
Base_Img_to_Mesh(
  (point_cloud_encoder): PointNet(
    (conv1): Conv1d(3, 64, kernel_size=(1,), stride=(1,))
    (conv2): Conv1d(64, 128, kernel_size=(1,), stride=(1,))
    (conv3): Conv1d(128, 1024, kernel_size=(1,), stride=(1,))
    (bn1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (bn2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (bn3): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (linear): Linear(in_features=1024, out_features=1024, bias=True)
    (bn4): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (img_endoer): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (avgpool): AvgPool2d(kernel_size=7, stride=7, padding=0)
    (fc): Linear(in_features=512, out_features=1024, bias=True)
  )
  (encoder): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (avgpool): AvgPool2d(kernel_size=7, stride=7, padding=0)
    (fc): Linear(in_features=512, out_features=1024, bias=True)
  )
  (deformNet1): DeformNet(
    (conv1): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
    (conv2): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
    (conv3): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
)
json_stats: {"train_loss": 0.14605913644327836, "val_loss": 0.04460357138237288, "epoch": 0, "lr": 0.001, "super_points": 2500, "chair": 0.04460357138237288}
json_stats: {"train_loss": 0.023431227389065657, "val_loss": 0.0180891650880492, "epoch": 1, "lr": 0.001, "super_points": 2500, "chair": 0.0180891650880492}
json_stats: {"train_loss": 0.014122032029006411, "val_loss": 0.012043522562571737, "epoch": 2, "lr": 0.001, "super_points": 2500, "chair": 0.012043522562571737}
json_stats: {"train_loss": 0.010586401896879953, "val_loss": 0.011658499645459097, "epoch": 3, "lr": 0.001, "super_points": 2500, "chair": 0.011658499645459097}
json_stats: {"train_loss": 0.009156753804863376, "val_loss": 0.009617981565899627, "epoch": 4, "lr": 0.001, "super_points": 2500, "chair": 0.009617981565899627}
json_stats: {"train_loss": 0.008587334494051687, "val_loss": 0.009403024821780449, "epoch": 5, "lr": 0.001, "super_points": 2500, "chair": 0.009403024821780449}
json_stats: {"train_loss": 0.007735759622472174, "val_loss": 0.008278345126052236, "epoch": 6, "lr": 0.001, "super_points": 2500, "chair": 0.008278345126052236}
json_stats: {"train_loss": 0.007375053149264525, "val_loss": 0.009106342626605616, "epoch": 7, "lr": 0.001, "super_points": 2500, "chair": 0.009106342626605616}
json_stats: {"train_loss": 0.006874205919859164, "val_loss": 0.007333136542678573, "epoch": 8, "lr": 0.001, "super_points": 2500, "chair": 0.007333136542678573}
json_stats: {"train_loss": 0.006526992023539018, "val_loss": 0.008196834929633972, "epoch": 9, "lr": 0.001, "super_points": 2500, "chair": 0.008196834929633972}
json_stats: {"train_loss": 0.006353541488266166, "val_loss": 0.008307736800160519, "epoch": 10, "lr": 0.001, "super_points": 2500, "chair": 0.008307736800160519}
json_stats: {"train_loss": 0.006205732358948272, "val_loss": 0.007300095643501642, "epoch": 11, "lr": 0.001, "super_points": 2500, "chair": 0.007300095643501642}
json_stats: {"train_loss": 0.005906867296161021, "val_loss": 0.006749000053766162, "epoch": 12, "lr": 0.001, "super_points": 2500, "chair": 0.006749000053766162}
json_stats: {"train_loss": 0.005867044635884025, "val_loss": 0.006631009064094965, "epoch": 13, "lr": 0.001, "super_points": 2500, "chair": 0.006631009064094965}
json_stats: {"train_loss": 0.005543768490829012, "val_loss": 0.006309205092229816, "epoch": 14, "lr": 0.001, "super_points": 2500, "chair": 0.006309205092229816}
json_stats: {"train_loss": 0.00555130330955281, "val_loss": 0.005704149051547744, "epoch": 15, "lr": 0.001, "super_points": 2500, "chair": 0.005704149051547744}
json_stats: {"train_loss": 0.00516433430945172, "val_loss": 0.005593160513875096, "epoch": 16, "lr": 0.001, "super_points": 2500, "chair": 0.005593160513875096}
json_stats: {"train_loss": 0.005021139623268563, "val_loss": 0.005600614094197057, "epoch": 17, "lr": 0.001, "super_points": 2500, "chair": 0.005600614094197057}
json_stats: {"train_loss": 0.005133049710489371, "val_loss": 0.005378602267524531, "epoch": 18, "lr": 0.001, "super_points": 2500, "chair": 0.005378602267524531}
json_stats: {"train_loss": 0.004935695370659232, "val_loss": 0.005190101213926493, "epoch": 19, "lr": 0.001, "super_points": 2500, "chair": 0.005190101213926493}
json_stats: {"train_loss": 0.004828980271978413, "val_loss": 0.004976556316927769, "epoch": 20, "lr": 0.001, "super_points": 2500, "chair": 0.004976556316927769}
json_stats: {"train_loss": 0.004635462223771302, "val_loss": 0.005250282239082248, "epoch": 21, "lr": 0.001, "super_points": 2500, "chair": 0.005250282239082248}
json_stats: {"train_loss": 0.004717932378544527, "val_loss": 0.005043249046646579, "epoch": 22, "lr": 0.001, "super_points": 2500, "chair": 0.005043249046646579}
json_stats: {"train_loss": 0.0045442594516584105, "val_loss": 0.006153556994747284, "epoch": 23, "lr": 0.001, "super_points": 2500, "chair": 0.006153556994747284}
json_stats: {"train_loss": 0.0045795065939755126, "val_loss": 0.005314723631843578, "epoch": 24, "lr": 0.001, "super_points": 2500, "chair": 0.005314723631843578}
json_stats: {"train_loss": 0.004420129170038683, "val_loss": 0.005585720524365126, "epoch": 25, "lr": 0.001, "super_points": 2500, "chair": 0.005585720524365126}
json_stats: {"train_loss": 0.004433231399504139, "val_loss": 0.0047172741520456795, "epoch": 26, "lr": 0.001, "super_points": 2500, "chair": 0.0047172741520456795}
json_stats: {"train_loss": 0.004343255827039042, "val_loss": 0.004634492992705038, "epoch": 27, "lr": 0.001, "super_points": 2500, "chair": 0.004634492992705038}
json_stats: {"train_loss": 0.004354792419711456, "val_loss": 0.0050518499514044714, "epoch": 28, "lr": 0.001, "super_points": 2500, "chair": 0.0050518499514044714}
json_stats: {"train_loss": 0.004306691038586638, "val_loss": 0.004770379735503432, "epoch": 29, "lr": 0.001, "super_points": 2500, "chair": 0.004770379735503432}
json_stats: {"train_loss": 0.004208489799159853, "val_loss": 0.005034210171203974, "epoch": 30, "lr": 0.001, "super_points": 2500, "chair": 0.005034210171203974}
json_stats: {"train_loss": 0.004100859665092738, "val_loss": 0.005004653133192035, "epoch": 31, "lr": 0.001, "super_points": 2500, "chair": 0.005004653133192035}
json_stats: {"train_loss": 0.004165549251689192, "val_loss": 0.0048771355799291025, "epoch": 32, "lr": 0.001, "super_points": 2500, "chair": 0.0048771355799291025}
json_stats: {"train_loss": 0.004098886523998397, "val_loss": 0.004113902711461104, "epoch": 33, "lr": 0.001, "super_points": 2500, "chair": 0.004113902711461104}
json_stats: {"train_loss": 0.004076196534066078, "val_loss": 0.004201191656161533, "epoch": 34, "lr": 0.001, "super_points": 2500, "chair": 0.004201191656161533}
json_stats: {"train_loss": 0.003927086129346315, "val_loss": 0.0040740353152762315, "epoch": 35, "lr": 0.001, "super_points": 2500, "chair": 0.0040740353152762315}
json_stats: {"train_loss": 0.004017461043344263, "val_loss": 0.004935685090374115, "epoch": 36, "lr": 0.001, "super_points": 2500, "chair": 0.004935685090374115}
json_stats: {"train_loss": 0.0038733488825314186, "val_loss": 0.00431469336780178, "epoch": 37, "lr": 0.001, "super_points": 2500, "chair": 0.00431469336780178}
json_stats: {"train_loss": 0.0038399155210594046, "val_loss": 0.004002983930932228, "epoch": 38, "lr": 0.001, "super_points": 2500, "chair": 0.004002983930932228}
json_stats: {"train_loss": 0.0038430584430256313, "val_loss": 0.004630580804375715, "epoch": 39, "lr": 0.001, "super_points": 2500, "chair": 0.004630580804375715}
json_stats: {"train_loss": 0.0036979245898478173, "val_loss": 0.003985704518421445, "epoch": 40, "lr": 0.001, "super_points": 2500, "chair": 0.003985704518421445}
json_stats: {"train_loss": 0.003718638318755171, "val_loss": 0.003857409251247381, "epoch": 41, "lr": 0.001, "super_points": 2500, "chair": 0.003857409251247381}
json_stats: {"train_loss": 0.0036577791496015645, "val_loss": 0.004371609452158906, "epoch": 42, "lr": 0.001, "super_points": 2500, "chair": 0.004371609452158906}
json_stats: {"train_loss": 0.0036601596457116743, "val_loss": 0.004047823685416302, "epoch": 43, "lr": 0.001, "super_points": 2500, "chair": 0.004047823685416302}
json_stats: {"train_loss": 0.0036410230348872786, "val_loss": 0.0038851340095577545, "epoch": 44, "lr": 0.001, "super_points": 2500, "chair": 0.0038851340095577545}
json_stats: {"train_loss": 0.003576174085302388, "val_loss": 0.004312752442824286, "epoch": 45, "lr": 0.001, "super_points": 2500, "chair": 0.004312752442824286}
json_stats: {"train_loss": 0.0035647560212322895, "val_loss": 0.004677639629821791, "epoch": 46, "lr": 0.001, "super_points": 2500, "chair": 0.004677639629821791}
json_stats: {"train_loss": 0.003462115112308632, "val_loss": 0.00392817365287175, "epoch": 47, "lr": 0.001, "super_points": 2500, "chair": 0.00392817365287175}
json_stats: {"train_loss": 0.0034702807856614097, "val_loss": 0.0038136529389682203, "epoch": 48, "lr": 0.001, "super_points": 2500, "chair": 0.0038136529389682203}
json_stats: {"train_loss": 0.003394988488734645, "val_loss": 0.0035120153767165055, "epoch": 49, "lr": 0.001, "super_points": 2500, "chair": 0.0035120153767165055}
json_stats: {"train_loss": 0.0033698785885730212, "val_loss": 0.0036542033126880954, "epoch": 50, "lr": 0.001, "super_points": 2500, "chair": 0.0036542033126880954}
json_stats: {"train_loss": 0.003480693476055475, "val_loss": 0.004566596246995899, "epoch": 51, "lr": 0.001, "super_points": 2500, "chair": 0.004566596246995899}
json_stats: {"train_loss": 0.00347659737967393, "val_loss": 0.003959042669902014, "epoch": 52, "lr": 0.001, "super_points": 2500, "chair": 0.003959042669902014}
json_stats: {"train_loss": 0.0033758975291515096, "val_loss": 0.003651398780950627, "epoch": 53, "lr": 0.001, "super_points": 2500, "chair": 0.003651398780950627}
json_stats: {"train_loss": 0.0034133873989476878, "val_loss": 0.004191680210317636, "epoch": 54, "lr": 0.001, "super_points": 2500, "chair": 0.004191680210317636}
json_stats: {"train_loss": 0.0033012816381147677, "val_loss": 0.0037355799509515594, "epoch": 55, "lr": 0.001, "super_points": 2500, "chair": 0.0037355799509515594}
json_stats: {"train_loss": 0.0032180171788615338, "val_loss": 0.00389642468220446, "epoch": 56, "lr": 0.001, "super_points": 2500, "chair": 0.00389642468220446}
json_stats: {"train_loss": 0.0032849928172414794, "val_loss": 0.0037611691216223463, "epoch": 57, "lr": 0.001, "super_points": 2500, "chair": 0.0037611691216223463}
json_stats: {"train_loss": 0.003199146438718719, "val_loss": 0.0034055494443448477, "epoch": 58, "lr": 0.001, "super_points": 2500, "chair": 0.0034055494443448477}
json_stats: {"train_loss": 0.003180977766511633, "val_loss": 0.003490748376650519, "epoch": 59, "lr": 0.001, "super_points": 2500, "chair": 0.003490748376650519}
json_stats: {"train_loss": 0.003170552281388903, "val_loss": 0.0036916617834723965, "epoch": 60, "lr": 0.001, "super_points": 2500, "chair": 0.0036916617834723965}
json_stats: {"train_loss": 0.0031861473244669683, "val_loss": 0.0036047339157829453, "epoch": 61, "lr": 0.001, "super_points": 2500, "chair": 0.0036047339157829453}
json_stats: {"train_loss": 0.0031184123760527546, "val_loss": 0.003959430435802354, "epoch": 62, "lr": 0.001, "super_points": 2500, "chair": 0.003959430435802354}
json_stats: {"train_loss": 0.0031143669162274285, "val_loss": 0.0036893178665534008, "epoch": 63, "lr": 0.001, "super_points": 2500, "chair": 0.0036893178665534008}
json_stats: {"train_loss": 0.003099395553855335, "val_loss": 0.003306535494968642, "epoch": 64, "lr": 0.001, "super_points": 2500, "chair": 0.003306535494968642}
json_stats: {"train_loss": 0.003056664960732793, "val_loss": 0.0033427188497816406, "epoch": 65, "lr": 0.001, "super_points": 2500, "chair": 0.0033427188497816406}
json_stats: {"train_loss": 0.003130680595195907, "val_loss": 0.0038091368150225905, "epoch": 66, "lr": 0.001, "super_points": 2500, "chair": 0.0038091368150225905}
json_stats: {"train_loss": 0.0031528952641083916, "val_loss": 0.003527436833178928, "epoch": 67, "lr": 0.001, "super_points": 2500, "chair": 0.003527436833178928}
json_stats: {"train_loss": 0.0029786189881098623, "val_loss": 0.0032793459276733703, "epoch": 68, "lr": 0.001, "super_points": 2500, "chair": 0.0032793459276733703}
json_stats: {"train_loss": 0.0030171391896574814, "val_loss": 0.003674901686175618, "epoch": 69, "lr": 0.001, "super_points": 2500, "chair": 0.003674901686175618}
json_stats: {"train_loss": 0.0030685330919154427, "val_loss": 0.003820090256847961, "epoch": 70, "lr": 0.001, "super_points": 2500, "chair": 0.003820090256847961}
json_stats: {"train_loss": 0.0029723252169787883, "val_loss": 0.0032366107726946127, "epoch": 71, "lr": 0.001, "super_points": 2500, "chair": 0.0032366107726946127}
json_stats: {"train_loss": 0.002954814609085374, "val_loss": 0.0036123844654147707, "epoch": 72, "lr": 0.001, "super_points": 2500, "chair": 0.0036123844654147707}
json_stats: {"train_loss": 0.0030309028827640062, "val_loss": 0.0033593408676774, "epoch": 73, "lr": 0.001, "super_points": 2500, "chair": 0.0033593408676774}
json_stats: {"train_loss": 0.0031339698197210535, "val_loss": 0.0034498935836085745, "epoch": 74, "lr": 0.001, "super_points": 2500, "chair": 0.0034498935836085745}
json_stats: {"train_loss": 0.003008828280657968, "val_loss": 0.004312870190153981, "epoch": 75, "lr": 0.001, "super_points": 2500, "chair": 0.004312870190153981}
json_stats: {"train_loss": 0.002923150885138003, "val_loss": 0.003210030008800501, "epoch": 76, "lr": 0.001, "super_points": 2500, "chair": 0.003210030008800501}
json_stats: {"train_loss": 0.0029169742894523286, "val_loss": 0.003271719776527133, "epoch": 77, "lr": 0.001, "super_points": 2500, "chair": 0.003271719776527133}
json_stats: {"train_loss": 0.0029924071161076425, "val_loss": 0.0035805648604277955, "epoch": 78, "lr": 0.001, "super_points": 2500, "chair": 0.0035805648604277955}
json_stats: {"train_loss": 0.002931663194013869, "val_loss": 0.0031212326897264915, "epoch": 79, "lr": 0.001, "super_points": 2500, "chair": 0.0031212326897264915}
json_stats: {"train_loss": 0.0028679919388035643, "val_loss": 0.003067304049943422, "epoch": 80, "lr": 0.001, "super_points": 2500, "chair": 0.003067304049943422}
json_stats: {"train_loss": 0.002919813483843909, "val_loss": 0.0032014724538596564, "epoch": 81, "lr": 0.001, "super_points": 2500, "chair": 0.0032014724538596564}
json_stats: {"train_loss": 0.002854288347503718, "val_loss": 0.0034267827272848332, "epoch": 82, "lr": 0.001, "super_points": 2500, "chair": 0.0034267827272848332}
json_stats: {"train_loss": 0.0028155822772532703, "val_loss": 0.0034262614627910215, "epoch": 83, "lr": 0.001, "super_points": 2500, "chair": 0.0034262614627910215}
json_stats: {"train_loss": 0.0028960350394139395, "val_loss": 0.003309726493086579, "epoch": 84, "lr": 0.001, "super_points": 2500, "chair": 0.003309726493086579}
json_stats: {"train_loss": 0.0028463698005961146, "val_loss": 0.003149028862068473, "epoch": 85, "lr": 0.001, "super_points": 2500, "chair": 0.003149028862068473}
json_stats: {"train_loss": 0.002873357345678789, "val_loss": 0.0031482241343880114, "epoch": 86, "lr": 0.001, "super_points": 2500, "chair": 0.0031482241343880114}
json_stats: {"train_loss": 0.002808076949954471, "val_loss": 0.0030421935303439926, "epoch": 87, "lr": 0.001, "super_points": 2500, "chair": 0.0030421935303439926}
json_stats: {"train_loss": 0.0027458328835885315, "val_loss": 0.0030900584046490666, "epoch": 88, "lr": 0.001, "super_points": 2500, "chair": 0.0030900584046490666}
json_stats: {"train_loss": 0.0027240729712716795, "val_loss": 0.0032428764619019837, "epoch": 89, "lr": 0.001, "super_points": 2500, "chair": 0.0032428764619019837}
json_stats: {"train_loss": 0.002833092664642369, "val_loss": 0.0032584704675300176, "epoch": 90, "lr": 0.001, "super_points": 2500, "chair": 0.0032584704675300176}
json_stats: {"train_loss": 0.0027873581877964383, "val_loss": 0.003102438778854733, "epoch": 91, "lr": 0.001, "super_points": 2500, "chair": 0.003102438778854733}
json_stats: {"train_loss": 0.0027766271973686182, "val_loss": 0.0030055547371333423, "epoch": 92, "lr": 0.001, "super_points": 2500, "chair": 0.0030055547371333423}
json_stats: {"train_loss": 0.002785447897279964, "val_loss": 0.003034663473277591, "epoch": 93, "lr": 0.001, "super_points": 2500, "chair": 0.003034663473277591}
json_stats: {"train_loss": 0.0027641578988336466, "val_loss": 0.0030822069709037624, "epoch": 94, "lr": 0.001, "super_points": 2500, "chair": 0.0030822069709037624}
json_stats: {"train_loss": 0.0027165148229173876, "val_loss": 0.0034465062496967093, "epoch": 95, "lr": 0.001, "super_points": 2500, "chair": 0.0034465062496967093}
json_stats: {"train_loss": 0.0027718436863163813, "val_loss": 0.0031906351295494756, "epoch": 96, "lr": 0.001, "super_points": 2500, "chair": 0.0031906351295494756}
json_stats: {"train_loss": 0.00277722374371746, "val_loss": 0.0030982372794993397, "epoch": 97, "lr": 0.001, "super_points": 2500, "chair": 0.0030982372794993397}
json_stats: {"train_loss": 0.0027598536573350428, "val_loss": 0.0034686174016272608, "epoch": 98, "lr": 0.001, "super_points": 2500, "chair": 0.0034686174016272608}
json_stats: {"train_loss": 0.002753485576249659, "val_loss": 0.0038681121077388525, "epoch": 99, "lr": 0.001, "super_points": 2500, "chair": 0.0038681121077388525}
json_stats: {"train_loss": 0.002480899085126379, "val_loss": 0.002611505311675543, "epoch": 100, "lr": 0.001, "super_points": 2500, "chair": 0.002611505311675543}
json_stats: {"train_loss": 0.002426877071368782, "val_loss": 0.0025693923613966203, "epoch": 101, "lr": 0.001, "super_points": 2500, "chair": 0.0025693923613966203}
json_stats: {"train_loss": 0.0023985649363192567, "val_loss": 0.0025854205339064084, "epoch": 102, "lr": 0.001, "super_points": 2500, "chair": 0.0025854205339064084}
json_stats: {"train_loss": 0.0023701973827829695, "val_loss": 0.0025612096367187277, "epoch": 103, "lr": 0.001, "super_points": 2500, "chair": 0.0025612096367187277}
json_stats: {"train_loss": 0.0023602470515898485, "val_loss": 0.0025592865666028025, "epoch": 104, "lr": 0.001, "super_points": 2500, "chair": 0.0025592865666028025}
json_stats: {"train_loss": 0.0023464714793269247, "val_loss": 0.00254128503255806, "epoch": 105, "lr": 0.001, "super_points": 2500, "chair": 0.00254128503255806}
json_stats: {"train_loss": 0.002344113589702722, "val_loss": 0.0025651697989899753, "epoch": 106, "lr": 0.001, "super_points": 2500, "chair": 0.0025651697989899753}
json_stats: {"train_loss": 0.0023204765967367326, "val_loss": 0.0025285129749411067, "epoch": 107, "lr": 0.001, "super_points": 2500, "chair": 0.0025285129749411067}
json_stats: {"train_loss": 0.00232424353769816, "val_loss": 0.002521054575566289, "epoch": 108, "lr": 0.001, "super_points": 2500, "chair": 0.002521054575566289}
json_stats: {"train_loss": 0.0023194734226254857, "val_loss": 0.0025125389490926334, "epoch": 109, "lr": 0.001, "super_points": 2500, "chair": 0.0025125389490926334}
json_stats: {"train_loss": 0.0023163260768770295, "val_loss": 0.0025162319571516195, "epoch": 110, "lr": 0.001, "super_points": 2500, "chair": 0.0025162319571516195}
json_stats: {"train_loss": 0.002305284030872452, "val_loss": 0.002513236932044979, "epoch": 111, "lr": 0.001, "super_points": 2500, "chair": 0.002513236932044979}
json_stats: {"train_loss": 0.0022916354622472736, "val_loss": 0.0024992493847601637, "epoch": 112, "lr": 0.001, "super_points": 2500, "chair": 0.0024992493847601637}
json_stats: {"train_loss": 0.0022913107141742813, "val_loss": 0.0025104174098043246, "epoch": 113, "lr": 0.001, "super_points": 2500, "chair": 0.0025104174098043246}
json_stats: {"train_loss": 0.002282738047378028, "val_loss": 0.0024957089430414315, "epoch": 114, "lr": 0.001, "super_points": 2500, "chair": 0.0024957089430414315}
json_stats: {"train_loss": 0.002270882095977226, "val_loss": 0.0025062186638066587, "epoch": 115, "lr": 0.001, "super_points": 2500, "chair": 0.0025062186638066587}
json_stats: {"train_loss": 0.002266436804989901, "val_loss": 0.0024911640266086473, "epoch": 116, "lr": 0.001, "super_points": 2500, "chair": 0.0024911640266086473}
json_stats: {"train_loss": 0.002274549403227866, "val_loss": 0.0024989951174532953, "epoch": 117, "lr": 0.001, "super_points": 2500, "chair": 0.0024989951174532953}
json_stats: {"train_loss": 0.0022734592901542785, "val_loss": 0.0025052735988094015, "epoch": 118, "lr": 0.001, "super_points": 2500, "chair": 0.0025052735988094015}
json_stats: {"train_loss": 0.0022565688006579874, "val_loss": 0.0024845550638125384, "epoch": 119, "lr": 0.001, "super_points": 2500, "chair": 0.0024845550638125384}
json_stats: {"train_loss": 0.052409899300512146, "val_loss": 0.09479873852674352, "epoch": 120, "lr": 0.001, "super_points": 2500, "chair": 0.09479873852674352}
json_stats: {"train_loss": 0.026250033212058686, "val_loss": 0.02681072346519592, "epoch": 121, "lr": 0.001, "super_points": 2500, "chair": 0.02681072346519592}
json_stats: {"train_loss": 0.01883444816202802, "val_loss": 0.01773655405917833, "epoch": 122, "lr": 0.001, "super_points": 2500, "chair": 0.01773655405917833}
json_stats: {"train_loss": 0.01747305041507763, "val_loss": 0.015925596273222636, "epoch": 123, "lr": 0.001, "super_points": 2500, "chair": 0.015925596273222636}
json_stats: {"train_loss": 0.01601816327585017, "val_loss": 0.022150675722852696, "epoch": 124, "lr": 0.001, "super_points": 2500, "chair": 0.022150675722852696}
json_stats: {"train_loss": 0.015507311324643738, "val_loss": 0.015474475097171096, "epoch": 125, "lr": 0.001, "super_points": 2500, "chair": 0.015474475097171096}
json_stats: {"train_loss": 0.015092865317402518, "val_loss": 0.018065710183839467, "epoch": 126, "lr": 0.001, "super_points": 2500, "chair": 0.018065710183839467}
json_stats: {"train_loss": 0.014364617706879097, "val_loss": 0.014455713721555333, "epoch": 127, "lr": 0.001, "super_points": 2500, "chair": 0.014455713721555333}
json_stats: {"train_loss": 0.013794125638463918, "val_loss": 0.015116297076781129, "epoch": 128, "lr": 0.001, "super_points": 2500, "chair": 0.015116297076781129}
json_stats: {"train_loss": 0.014624089572359535, "val_loss": 1.1711058907730634, "epoch": 129, "lr": 0.001, "super_points": 2500, "chair": 1.1711058907730634}
Base_Img_to_Mesh(
  (point_cloud_encoder): PointNet(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(3, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(64, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(128, 1024, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (linear): Linear(in_features=1024, out_features=1024, bias=True)
    (bn4): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (img_endoer): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (avgpool): AvgPool2d(kernel_size=7, stride=7, padding=0)
    (fc): Linear(in_features=512, out_features=1024, bias=True)
  )
  (encoder): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (avgpool): AvgPool2d(kernel_size=7, stride=7, padding=0)
    (fc): Linear(in_features=512, out_features=1024, bias=True)
  )
  (deformNet1): DeformNet(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
)
Base_Img_to_Mesh(
  (point_cloud_encoder): PointNet(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(3, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(64, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(128, 1024, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (linear): Linear(in_features=1024, out_features=1024, bias=True)
    (bn4): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (img_endoer): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (avgpool): AvgPool2d(kernel_size=7, stride=7, padding=0)
    (fc): Linear(in_features=512, out_features=1024, bias=True)
  )
  (encoder): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (avgpool): AvgPool2d(kernel_size=7, stride=7, padding=0)
    (fc): Linear(in_features=512, out_features=1024, bias=True)
  )
  (deformNet1): DeformNet(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
)
Base_Img_to_Mesh(
  (point_cloud_encoder): PointNet(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(3, 64, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(64, 128, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(128, 1024, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (linear): Linear(in_features=1024, out_features=1024, bias=True)
    (bn4): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (img_endoer): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (avgpool): AvgPool2d(kernel_size=7, stride=7, padding=0)
    (fc): Linear(in_features=512, out_features=1024, bias=True)
  )
  (encoder): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (avgpool): AvgPool2d(kernel_size=7, stride=7, padding=0)
    (fc): Linear(in_features=512, out_features=1024, bias=True)
  )
  (deformNet1): DeformNet(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
)
json_stats: {"train_loss": 0.12402800007120651, "val_loss": 0.040580834760222326, "epoch": 0, "lr": 0.001, "super_points": 2500, "chair": 0.040580834760222326}
json_stats: {"train_loss": 0.024163782114491744, "val_loss": 0.0332253904536713, "epoch": 1, "lr": 0.001, "super_points": 2500, "chair": 0.0332253904536713}
json_stats: {"train_loss": 0.018710363031748462, "val_loss": 0.01901654961930458, "epoch": 2, "lr": 0.001, "super_points": 2500, "chair": 0.01901654961930458}
json_stats: {"train_loss": 0.014249230997965616, "val_loss": 0.019051200515309046, "epoch": 3, "lr": 0.001, "super_points": 2500, "chair": 0.019051200515309046}
json_stats: {"train_loss": 0.012908025124274632, "val_loss": 0.013178621635360772, "epoch": 4, "lr": 0.001, "super_points": 2500, "chair": 0.013178621635360772}
json_stats: {"train_loss": 0.012089588454760172, "val_loss": 0.016180693951630316, "epoch": 5, "lr": 0.001, "super_points": 2500, "chair": 0.016180693951630316}
json_stats: {"train_loss": 0.010755644010051208, "val_loss": 0.014780153866943925, "epoch": 6, "lr": 0.001, "super_points": 2500, "chair": 0.014780153866943925}
json_stats: {"train_loss": 0.010394637352403473, "val_loss": 0.010101907843247403, "epoch": 7, "lr": 0.001, "super_points": 2500, "chair": 0.010101907843247403}
json_stats: {"train_loss": 0.010021428342032082, "val_loss": 0.010529512431212636, "epoch": 8, "lr": 0.001, "super_points": 2500, "chair": 0.010529512431212636}
json_stats: {"train_loss": 0.009942693923435667, "val_loss": 0.010992472666467345, "epoch": 9, "lr": 0.001, "super_points": 2500, "chair": 0.010992472666467345}
json_stats: {"train_loss": 0.009364749272080029, "val_loss": 0.023496772379202897, "epoch": 10, "lr": 0.001, "super_points": 2500, "chair": 0.023496772379202897}
json_stats: {"train_loss": 0.009260014009059353, "val_loss": 0.013166200954380423, "epoch": 11, "lr": 0.001, "super_points": 2500, "chair": 0.013166200954380423}
json_stats: {"train_loss": 0.008609627724132117, "val_loss": 0.00881260840308874, "epoch": 12, "lr": 0.001, "super_points": 2500, "chair": 0.00881260840308874}
json_stats: {"train_loss": 0.008223056845257388, "val_loss": 0.010720984165578387, "epoch": 13, "lr": 0.001, "super_points": 2500, "chair": 0.010720984165578387}
json_stats: {"train_loss": 0.007801178240162485, "val_loss": 0.00793033461411332, "epoch": 14, "lr": 0.001, "super_points": 2500, "chair": 0.00793033461411332}
json_stats: {"train_loss": 0.007923829347333487, "val_loss": 0.009560252658936173, "epoch": 15, "lr": 0.001, "super_points": 2500, "chair": 0.009560252658936173}
json_stats: {"train_loss": 0.007466730242595076, "val_loss": 0.008751836713663367, "epoch": 16, "lr": 0.001, "super_points": 2500, "chair": 0.008751836713663367}
json_stats: {"train_loss": 0.007300234712002908, "val_loss": 0.00785454486085232, "epoch": 17, "lr": 0.001, "super_points": 2500, "chair": 0.00785454486085232}
json_stats: {"train_loss": 0.007448609710177955, "val_loss": 0.011583028675251923, "epoch": 18, "lr": 0.001, "super_points": 2500, "chair": 0.011583028675251923}
json_stats: {"train_loss": 0.007150077050113503, "val_loss": 0.007527484157837407, "epoch": 19, "lr": 0.001, "super_points": 2500, "chair": 0.007527484157837407}
json_stats: {"train_loss": 0.006840618828530697, "val_loss": 0.009329949603091145, "epoch": 20, "lr": 0.001, "super_points": 2500, "chair": 0.009329949603091145}
json_stats: {"train_loss": 0.00679159932769835, "val_loss": 0.008209143115510775, "epoch": 21, "lr": 0.001, "super_points": 2500, "chair": 0.008209143115510775}
json_stats: {"train_loss": 0.01254782408804578, "val_loss": 0.00959992402254842, "epoch": 22, "lr": 0.001, "super_points": 2500, "chair": 0.00959992402254842}
json_stats: {"train_loss": 0.008260052327943199, "val_loss": 0.009523525552520918, "epoch": 23, "lr": 0.001, "super_points": 2500, "chair": 0.009523525552520918}
json_stats: {"train_loss": 0.007601817269973895, "val_loss": 0.01068753393930058, "epoch": 24, "lr": 0.001, "super_points": 2500, "chair": 0.01068753393930058}
json_stats: {"train_loss": 0.007065810057718088, "val_loss": 0.006488394804385512, "epoch": 25, "lr": 0.001, "super_points": 2500, "chair": 0.006488394804385512}
json_stats: {"train_loss": 0.00663441428092911, "val_loss": 0.007202189058325318, "epoch": 26, "lr": 0.001, "super_points": 2500, "chair": 0.007202189058325318}
json_stats: {"train_loss": 0.006701259766979253, "val_loss": 0.005988873433061811, "epoch": 27, "lr": 0.001, "super_points": 2500, "chair": 0.005988873433061811}
json_stats: {"train_loss": 0.006337795135400751, "val_loss": 0.00662315726756703, "epoch": 28, "lr": 0.001, "super_points": 2500, "chair": 0.00662315726756703}
json_stats: {"train_loss": 0.006306249872945687, "val_loss": 0.016894808667170448, "epoch": 29, "lr": 0.001, "super_points": 2500, "chair": 0.016894808667170448}
json_stats: {"train_loss": 0.006290368094821187, "val_loss": 0.007039713554170935, "epoch": 30, "lr": 0.001, "super_points": 2500, "chair": 0.007039713554170935}
json_stats: {"train_loss": 0.005881600328447188, "val_loss": 0.006257601829548908, "epoch": 31, "lr": 0.001, "super_points": 2500, "chair": 0.006257601829548908}
json_stats: {"train_loss": 0.005788614110582892, "val_loss": 0.005981045623504838, "epoch": 32, "lr": 0.001, "super_points": 2500, "chair": 0.005981045623504838}
json_stats: {"train_loss": 0.0056897177169209015, "val_loss": 0.0061872942524767195, "epoch": 33, "lr": 0.001, "super_points": 2500, "chair": 0.0061872942524767195}
json_stats: {"train_loss": 0.005392919631455751, "val_loss": 0.005742525681853294, "epoch": 34, "lr": 0.001, "super_points": 2500, "chair": 0.005742525681853294}
json_stats: {"train_loss": 0.005506194289773702, "val_loss": 0.006047942794772775, "epoch": 35, "lr": 0.001, "super_points": 2500, "chair": 0.006047942794772775}
json_stats: {"train_loss": 0.005689062413704746, "val_loss": 0.006079666533095892, "epoch": 36, "lr": 0.001, "super_points": 2500, "chair": 0.006079666533095892}
json_stats: {"train_loss": 0.005310324272688697, "val_loss": 0.0064830809593373956, "epoch": 37, "lr": 0.001, "super_points": 2500, "chair": 0.0064830809593373956}
json_stats: {"train_loss": 0.005241779550252592, "val_loss": 0.005183661638130975, "epoch": 38, "lr": 0.001, "super_points": 2500, "chair": 0.005183661638130975}
json_stats: {"train_loss": 0.005173936286283766, "val_loss": 0.005778654954980972, "epoch": 39, "lr": 0.001, "super_points": 2500, "chair": 0.005778654954980972}
json_stats: {"train_loss": 0.005072940694277777, "val_loss": 0.005561904548559078, "epoch": 40, "lr": 0.001, "super_points": 2500, "chair": 0.005561904548559078}
json_stats: {"train_loss": 0.005007079427185304, "val_loss": 0.005809148741062991, "epoch": 41, "lr": 0.001, "super_points": 2500, "chair": 0.005809148741062991}
json_stats: {"train_loss": 0.004953718456604025, "val_loss": 0.005775849172455627, "epoch": 42, "lr": 0.001, "super_points": 2500, "chair": 0.005775849172455627}
json_stats: {"train_loss": 0.004839798079474884, "val_loss": 0.00646486138751687, "epoch": 43, "lr": 0.001, "super_points": 2500, "chair": 0.00646486138751687}
json_stats: {"train_loss": 0.004891187231987715, "val_loss": 0.005313669558787762, "epoch": 44, "lr": 0.001, "super_points": 2500, "chair": 0.005313669558787762}
json_stats: {"train_loss": 0.004758673783063012, "val_loss": 0.004914828110486269, "epoch": 45, "lr": 0.001, "super_points": 2500, "chair": 0.004914828110486269}
json_stats: {"train_loss": 0.004596001749365207, "val_loss": 0.005550179283979328, "epoch": 46, "lr": 0.001, "super_points": 2500, "chair": 0.005550179283979328}
json_stats: {"train_loss": 0.004736209759379134, "val_loss": 0.005085164816443657, "epoch": 47, "lr": 0.001, "super_points": 2500, "chair": 0.005085164816443657}
json_stats: {"train_loss": 0.0045714121873435725, "val_loss": 0.0044609773200178565, "epoch": 48, "lr": 0.001, "super_points": 2500, "chair": 0.0044609773200178565}
json_stats: {"train_loss": 0.004480172410223852, "val_loss": 0.005495968475114814, "epoch": 49, "lr": 0.001, "super_points": 2500, "chair": 0.005495968475114814}
json_stats: {"train_loss": 0.004327670473824529, "val_loss": 0.0044838426428911995, "epoch": 50, "lr": 0.001, "super_points": 2500, "chair": 0.0044838426428911995}
json_stats: {"train_loss": 0.004374996932935627, "val_loss": 0.004581289457936966, "epoch": 51, "lr": 0.001, "super_points": 2500, "chair": 0.004581289457936966}
json_stats: {"train_loss": 0.004462251743740019, "val_loss": 0.004766389202369854, "epoch": 52, "lr": 0.001, "super_points": 2500, "chair": 0.004766389202369854}
json_stats: {"train_loss": 0.004393343090572778, "val_loss": 0.004585446524542085, "epoch": 53, "lr": 0.001, "super_points": 2500, "chair": 0.004585446524542085}
json_stats: {"train_loss": 0.00419058394344414, "val_loss": 0.005103251880554612, "epoch": 54, "lr": 0.001, "super_points": 2500, "chair": 0.005103251880554612}
json_stats: {"train_loss": 0.0042162872152402995, "val_loss": 0.0051715589225898645, "epoch": 55, "lr": 0.001, "super_points": 2500, "chair": 0.0051715589225898645}
json_stats: {"train_loss": 0.004197124917717541, "val_loss": 0.004266604131390882, "epoch": 56, "lr": 0.001, "super_points": 2500, "chair": 0.004266604131390882}
json_stats: {"train_loss": 0.004195210497881121, "val_loss": 0.005154286868610355, "epoch": 57, "lr": 0.001, "super_points": 2500, "chair": 0.005154286868610355}
json_stats: {"train_loss": 0.003898320036173305, "val_loss": 0.004016727122456529, "epoch": 58, "lr": 0.001, "super_points": 2500, "chair": 0.004016727122456529}
json_stats: {"train_loss": 0.0042689818573896495, "val_loss": 0.008850328050293895, "epoch": 59, "lr": 0.001, "super_points": 2500, "chair": 0.008850328050293895}
json_stats: {"train_loss": 0.004228790016735301, "val_loss": 0.004239658581439492, "epoch": 60, "lr": 0.001, "super_points": 2500, "chair": 0.004239658581439492}
json_stats: {"train_loss": 0.003967685514020131, "val_loss": 0.005516455530427223, "epoch": 61, "lr": 0.001, "super_points": 2500, "chair": 0.005516455530427223}
json_stats: {"train_loss": 0.0038192831404397594, "val_loss": 0.004508270324359453, "epoch": 62, "lr": 0.001, "super_points": 2500, "chair": 0.004508270324359453}
json_stats: {"train_loss": 0.003814210546860362, "val_loss": 0.0043146157972947805, "epoch": 63, "lr": 0.001, "super_points": 2500, "chair": 0.0043146157972947805}
json_stats: {"train_loss": 0.0038345938575837543, "val_loss": 0.004111145092390998, "epoch": 64, "lr": 0.001, "super_points": 2500, "chair": 0.004111145092390998}
json_stats: {"train_loss": 0.003819836814449552, "val_loss": 0.004112065780561331, "epoch": 65, "lr": 0.001, "super_points": 2500, "chair": 0.004112065780561331}
json_stats: {"train_loss": 0.0037294205784907234, "val_loss": 0.0039967915129869485, "epoch": 66, "lr": 0.001, "super_points": 2500, "chair": 0.0039967915129869485}
json_stats: {"train_loss": 0.0038397420567515142, "val_loss": 0.004378540365588527, "epoch": 67, "lr": 0.001, "super_points": 2500, "chair": 0.004378540365588527}
json_stats: {"train_loss": 0.003682126565014615, "val_loss": 0.004401034426463898, "epoch": 68, "lr": 0.001, "super_points": 2500, "chair": 0.004401034426463898}
json_stats: {"train_loss": 0.0037854629377012746, "val_loss": 0.003937727690479437, "epoch": 69, "lr": 0.001, "super_points": 2500, "chair": 0.003937727690479437}
json_stats: {"train_loss": 0.0036161502768449925, "val_loss": 0.004287806209609952, "epoch": 70, "lr": 0.001, "super_points": 2500, "chair": 0.004287806209609952}
json_stats: {"train_loss": 0.0035737298798802146, "val_loss": 0.004237642814946729, "epoch": 71, "lr": 0.001, "super_points": 2500, "chair": 0.004237642814946729}
json_stats: {"train_loss": 0.0035651316496488803, "val_loss": 0.003728251573954557, "epoch": 72, "lr": 0.001, "super_points": 2500, "chair": 0.003728251573954557}
json_stats: {"train_loss": 0.0035310944898382705, "val_loss": 0.00441369034761433, "epoch": 73, "lr": 0.001, "super_points": 2500, "chair": 0.00441369034761433}
json_stats: {"train_loss": 0.004093128564657972, "val_loss": 0.006531963720484529, "epoch": 74, "lr": 0.001, "super_points": 2500, "chair": 0.006531963720484529}
json_stats: {"train_loss": 0.003763298417770249, "val_loss": 0.003911435512046135, "epoch": 75, "lr": 0.001, "super_points": 2500, "chair": 0.003911435512046135}
json_stats: {"train_loss": 0.0034481376190395917, "val_loss": 0.004069607130923244, "epoch": 76, "lr": 0.001, "super_points": 2500, "chair": 0.004069607130923244}
json_stats: {"train_loss": 0.0034051550689208157, "val_loss": 0.0035502470509950505, "epoch": 77, "lr": 0.001, "super_points": 2500, "chair": 0.0035502470509950505}
json_stats: {"train_loss": 0.003371228076353231, "val_loss": 0.003544241563568628, "epoch": 78, "lr": 0.001, "super_points": 2500, "chair": 0.003544241563568628}
json_stats: {"train_loss": 0.003404836697668275, "val_loss": 0.004157359240749894, "epoch": 79, "lr": 0.001, "super_points": 2500, "chair": 0.004157359240749894}
json_stats: {"train_loss": 0.0033765757593381056, "val_loss": 0.003919816061551141, "epoch": 80, "lr": 0.001, "super_points": 2500, "chair": 0.003919816061551141}
json_stats: {"train_loss": 0.0034301723120734096, "val_loss": 0.0036185185619911483, "epoch": 81, "lr": 0.001, "super_points": 2500, "chair": 0.0036185185619911483}
json_stats: {"train_loss": 0.0033039965749006063, "val_loss": 0.0035968670935564956, "epoch": 82, "lr": 0.001, "super_points": 2500, "chair": 0.0035968670935564956}
json_stats: {"train_loss": 0.0032776682938942137, "val_loss": 0.0035780743035206267, "epoch": 83, "lr": 0.001, "super_points": 2500, "chair": 0.0035780743035206267}
json_stats: {"train_loss": 0.0032711774001226704, "val_loss": 0.003870093133733716, "epoch": 84, "lr": 0.001, "super_points": 2500, "chair": 0.003870093133733716}
json_stats: {"train_loss": 0.003237601461382035, "val_loss": 0.004208043217658997, "epoch": 85, "lr": 0.001, "super_points": 2500, "chair": 0.004208043217658997}
json_stats: {"train_loss": 0.0033650692429064827, "val_loss": 0.0033577712371858745, "epoch": 86, "lr": 0.001, "super_points": 2500, "chair": 0.0033577712371858745}
json_stats: {"train_loss": 0.0031353453776853924, "val_loss": 0.003398866273549407, "epoch": 87, "lr": 0.001, "super_points": 2500, "chair": 0.003398866273549407}
json_stats: {"train_loss": 0.0031641564249773237, "val_loss": 0.0036662368504547104, "epoch": 88, "lr": 0.001, "super_points": 2500, "chair": 0.0036662368504547104}
json_stats: {"train_loss": 0.003147239448940929, "val_loss": 0.0034676313584367205, "epoch": 89, "lr": 0.001, "super_points": 2500, "chair": 0.0034676313584367205}
json_stats: {"train_loss": 0.0031168107340550596, "val_loss": 0.0037771329327031624, "epoch": 90, "lr": 0.001, "super_points": 2500, "chair": 0.0037771329327031624}
json_stats: {"train_loss": 0.003152167042443419, "val_loss": 0.0037134371502974698, "epoch": 91, "lr": 0.001, "super_points": 2500, "chair": 0.0037134371502974698}
json_stats: {"train_loss": 0.0031190573676105806, "val_loss": 0.003386314752576656, "epoch": 92, "lr": 0.001, "super_points": 2500, "chair": 0.003386314752576656}
json_stats: {"train_loss": 0.003100270464304177, "val_loss": 0.004249109697073351, "epoch": 93, "lr": 0.001, "super_points": 2500, "chair": 0.004249109697073351}
json_stats: {"train_loss": 0.0030349970671950896, "val_loss": 0.0036632506404245314, "epoch": 94, "lr": 0.001, "super_points": 2500, "chair": 0.0036632506404245314}
json_stats: {"train_loss": 0.003009579427923788, "val_loss": 0.0033183237646034983, "epoch": 95, "lr": 0.001, "super_points": 2500, "chair": 0.0033183237646034983}
json_stats: {"train_loss": 0.003069748163825887, "val_loss": 0.004184340213447116, "epoch": 96, "lr": 0.001, "super_points": 2500, "chair": 0.004184340213447116}
json_stats: {"train_loss": 0.0030588742797536886, "val_loss": 0.003156029640935188, "epoch": 97, "lr": 0.001, "super_points": 2500, "chair": 0.003156029640935188}
json_stats: {"train_loss": 0.0029091561733580688, "val_loss": 0.0036750298080056214, "epoch": 98, "lr": 0.001, "super_points": 2500, "chair": 0.0036750298080056214}
json_stats: {"train_loss": 0.0030211309381925006, "val_loss": 0.003824751461357918, "epoch": 99, "lr": 0.001, "super_points": 2500, "chair": 0.003824751461357918}
json_stats: {"train_loss": 0.002582056477994603, "val_loss": 0.0026351057756475583, "epoch": 100, "lr": 0.001, "super_points": 2500, "chair": 0.0026351057756475583}
json_stats: {"train_loss": 0.002515745834063958, "val_loss": 0.002582145540780106, "epoch": 101, "lr": 0.001, "super_points": 2500, "chair": 0.002582145540780106}
json_stats: {"train_loss": 0.002465901610112804, "val_loss": 0.0026118704063687907, "epoch": 102, "lr": 0.001, "super_points": 2500, "chair": 0.0026118704063687907}
json_stats: {"train_loss": 0.0024416913620798905, "val_loss": 0.0025885407542160085, "epoch": 103, "lr": 0.001, "super_points": 2500, "chair": 0.0025885407542160085}
json_stats: {"train_loss": 0.0024411437457756086, "val_loss": 0.0025928906831067314, "epoch": 104, "lr": 0.001, "super_points": 2500, "chair": 0.0025928906831067314}
json_stats: {"train_loss": 0.002416285771109602, "val_loss": 0.0025556726262060017, "epoch": 105, "lr": 0.001, "super_points": 2500, "chair": 0.0025556726262060017}
json_stats: {"train_loss": 0.0024042482008500136, "val_loss": 0.0025649711971582716, "epoch": 106, "lr": 0.001, "super_points": 2500, "chair": 0.0025649711971582716}
json_stats: {"train_loss": 0.0023797398885054624, "val_loss": 0.002524397861169175, "epoch": 107, "lr": 0.001, "super_points": 2500, "chair": 0.002524397861169175}
json_stats: {"train_loss": 0.0023821462096427293, "val_loss": 0.0025245442899853683, "epoch": 108, "lr": 0.001, "super_points": 2500, "chair": 0.0025245442899853683}
json_stats: {"train_loss": 0.0023720883202793842, "val_loss": 0.002516846064218255, "epoch": 109, "lr": 0.001, "super_points": 2500, "chair": 0.002516846064218255}
json_stats: {"train_loss": 0.0023723050486296414, "val_loss": 0.002515949931558828, "epoch": 110, "lr": 0.001, "super_points": 2500, "chair": 0.002515949931558828}
json_stats: {"train_loss": 0.0023583496208576596, "val_loss": 0.0025066777246159524, "epoch": 111, "lr": 0.001, "super_points": 2500, "chair": 0.0025066777246159524}
json_stats: {"train_loss": 0.002340123358675662, "val_loss": 0.0025028979167515454, "epoch": 112, "lr": 0.001, "super_points": 2500, "chair": 0.0025028979167515454}
json_stats: {"train_loss": 0.0023655292180859867, "val_loss": 0.0026267038977726602, "epoch": 113, "lr": 0.001, "super_points": 2500, "chair": 0.0026267038977726602}
json_stats: {"train_loss": 0.00232720990144812, "val_loss": 0.0024862330553100205, "epoch": 114, "lr": 0.001, "super_points": 2500, "chair": 0.0024862330553100205}
json_stats: {"train_loss": 0.0023217448403182275, "val_loss": 0.0025076025631278753, "epoch": 115, "lr": 0.001, "super_points": 2500, "chair": 0.0025076025631278753}
json_stats: {"train_loss": 0.002312251944642733, "val_loss": 0.0025104727395701895, "epoch": 116, "lr": 0.001, "super_points": 2500, "chair": 0.0025104727395701895}
json_stats: {"train_loss": 0.0023171174449517448, "val_loss": 0.002527745984776249, "epoch": 117, "lr": 0.001, "super_points": 2500, "chair": 0.002527745984776249}
json_stats: {"train_loss": 0.0023080495377892957, "val_loss": 0.002515996714274204, "epoch": 118, "lr": 0.001, "super_points": 2500, "chair": 0.002515996714274204}
json_stats: {"train_loss": 0.0022973816294003936, "val_loss": 0.0024918375731727413, "epoch": 119, "lr": 0.001, "super_points": 2500, "chair": 0.0024918375731727413}
json_stats: {"train_loss": 0.01524157426046098, "val_loss": 0.01897798281509516, "epoch": 120, "lr": 0.001, "super_points": 2500, "chair": 0.01897798281509516}
json_stats: {"train_loss": 0.011457354657571105, "val_loss": 0.018435411718349125, "epoch": 121, "lr": 0.001, "super_points": 2500, "chair": 0.018435411718349125}
json_stats: {"train_loss": 0.010599669751108569, "val_loss": 0.020096723683351695, "epoch": 122, "lr": 0.001, "super_points": 2500, "chair": 0.020096723683351695}
json_stats: {"train_loss": 0.01025846493704354, "val_loss": 0.013591228681075018, "epoch": 123, "lr": 0.001, "super_points": 2500, "chair": 0.013591228681075018}
json_stats: {"train_loss": 0.009808404891587356, "val_loss": 0.011384697479390821, "epoch": 124, "lr": 0.001, "super_points": 2500, "chair": 0.011384697479390821}
json_stats: {"train_loss": 0.009347895730067703, "val_loss": 0.0125306625958792, "epoch": 125, "lr": 0.001, "super_points": 2500, "chair": 0.0125306625958792}
json_stats: {"train_loss": 0.00913486838724245, "val_loss": 0.013386197778028111, "epoch": 126, "lr": 0.001, "super_points": 2500, "chair": 0.013386197778028111}
json_stats: {"train_loss": 0.008896358231739962, "val_loss": 0.012034573029120301, "epoch": 127, "lr": 0.001, "super_points": 2500, "chair": 0.012034573029120301}
json_stats: {"train_loss": 0.009077299345175134, "val_loss": 0.013147833258953205, "epoch": 128, "lr": 0.001, "super_points": 2500, "chair": 0.013147833258953205}
json_stats: {"train_loss": 0.008833354117129655, "val_loss": 0.016271304274194463, "epoch": 129, "lr": 0.001, "super_points": 2500, "chair": 0.016271304274194463}
json_stats: {"train_loss": 0.008592523952179095, "val_loss": 0.014093661724134933, "epoch": 130, "lr": 0.001, "super_points": 2500, "chair": 0.014093661724134933}
json_stats: {"train_loss": 0.008376257510527093, "val_loss": 0.018636660195540552, "epoch": 131, "lr": 0.001, "super_points": 2500, "chair": 0.018636660195540552}
json_stats: {"train_loss": 0.008315249124322743, "val_loss": 0.012812076591301796, "epoch": 132, "lr": 0.001, "super_points": 2500, "chair": 0.012812076591301796}
json_stats: {"train_loss": 0.00807799910852576, "val_loss": 0.010951766722597355, "epoch": 133, "lr": 0.001, "super_points": 2500, "chair": 0.010951766722597355}
json_stats: {"train_loss": 0.00790507395970909, "val_loss": 0.018896483101470525, "epoch": 134, "lr": 0.001, "super_points": 2500, "chair": 0.018896483101470525}
json_stats: {"train_loss": 0.007933143107220531, "val_loss": 0.014754318718820117, "epoch": 135, "lr": 0.001, "super_points": 2500, "chair": 0.014754318718820117}
json_stats: {"train_loss": 0.007898478941334521, "val_loss": 0.013820243717799352, "epoch": 136, "lr": 0.001, "super_points": 2500, "chair": 0.013820243717799352}
json_stats: {"train_loss": 0.007884545794085545, "val_loss": 0.012374078551697176, "epoch": 137, "lr": 0.001, "super_points": 2500, "chair": 0.012374078551697176}
json_stats: {"train_loss": 0.007840933196027489, "val_loss": 0.015825655419639376, "epoch": 138, "lr": 0.001, "super_points": 2500, "chair": 0.015825655419639376}
json_stats: {"train_loss": 0.007551135941792061, "val_loss": 0.013405072632743868, "epoch": 139, "lr": 0.001, "super_points": 2500, "chair": 0.013405072632743868}
json_stats: {"train_loss": 0.007535336476148052, "val_loss": 0.011854689914819807, "epoch": 140, "lr": 0.001, "super_points": 2500, "chair": 0.011854689914819807}
json_stats: {"train_loss": 0.007521439209470854, "val_loss": 0.011345109447490337, "epoch": 141, "lr": 0.001, "super_points": 2500, "chair": 0.011345109447490337}
json_stats: {"train_loss": 0.007279683578321162, "val_loss": 0.009936590202499268, "epoch": 142, "lr": 0.001, "super_points": 2500, "chair": 0.009936590202499268}
json_stats: {"train_loss": 0.0074838357374948615, "val_loss": 0.014353498080095579, "epoch": 143, "lr": 0.001, "super_points": 2500, "chair": 0.014353498080095579}
json_stats: {"train_loss": 0.0072853374705814265, "val_loss": 0.0112054624789676, "epoch": 144, "lr": 0.001, "super_points": 2500, "chair": 0.0112054624789676}
json_stats: {"train_loss": 0.0071830995134351885, "val_loss": 0.013952668539659922, "epoch": 145, "lr": 0.001, "super_points": 2500, "chair": 0.013952668539659922}
json_stats: {"train_loss": 0.007263394894407076, "val_loss": 0.010333995334804058, "epoch": 146, "lr": 0.001, "super_points": 2500, "chair": 0.010333995334804058}
json_stats: {"train_loss": 0.0072607048376299, "val_loss": 0.013572503422755141, "epoch": 147, "lr": 0.001, "super_points": 2500, "chair": 0.013572503422755141}
json_stats: {"train_loss": 0.00705830889808781, "val_loss": 0.013723475273785203, "epoch": 148, "lr": 0.001, "super_points": 2500, "chair": 0.013723475273785203}
json_stats: {"train_loss": 0.007067478749462787, "val_loss": 0.014145676934615124, "epoch": 149, "lr": 0.001, "super_points": 2500, "chair": 0.014145676934615124}
json_stats: {"train_loss": 0.006857324676478611, "val_loss": 0.012351635843515396, "epoch": 150, "lr": 0.001, "super_points": 2500, "chair": 0.012351635843515396}
json_stats: {"train_loss": 0.006973805467543357, "val_loss": 0.011962119013417599, "epoch": 151, "lr": 0.001, "super_points": 2500, "chair": 0.011962119013417599}
json_stats: {"train_loss": 0.006860873955028022, "val_loss": 0.010793544633617235, "epoch": 152, "lr": 0.001, "super_points": 2500, "chair": 0.010793544633617235}
json_stats: {"train_loss": 0.006923363590613007, "val_loss": 0.009832080659391574, "epoch": 153, "lr": 0.001, "super_points": 2500, "chair": 0.009832080659391574}
json_stats: {"train_loss": 0.006821343039765077, "val_loss": 0.012777837209923322, "epoch": 154, "lr": 0.001, "super_points": 2500, "chair": 0.012777837209923322}
json_stats: {"train_loss": 0.006740584098460043, "val_loss": 0.02852826990013899, "epoch": 155, "lr": 0.001, "super_points": 2500, "chair": 0.02852826990013899}
json_stats: {"train_loss": 0.006760191892766778, "val_loss": 0.009431909304112196, "epoch": 156, "lr": 0.001, "super_points": 2500, "chair": 0.009431909304112196}
json_stats: {"train_loss": 0.006631171601988814, "val_loss": 0.009812845588596754, "epoch": 157, "lr": 0.001, "super_points": 2500, "chair": 0.009812845588596754}
json_stats: {"train_loss": 0.006564413871177855, "val_loss": 0.033567219539437185, "epoch": 158, "lr": 0.001, "super_points": 2500, "chair": 0.033567219539437185}
json_stats: {"train_loss": 0.006603123907766798, "val_loss": 0.013650878852363242, "epoch": 159, "lr": 0.001, "super_points": 2500, "chair": 0.013650878852363242}
json_stats: {"train_loss": 0.006472371535047012, "val_loss": 0.019223555835873582, "epoch": 160, "lr": 0.001, "super_points": 2500, "chair": 0.019223555835873582}
json_stats: {"train_loss": 0.006540296906057526, "val_loss": 0.008434883676209422, "epoch": 161, "lr": 0.001, "super_points": 2500, "chair": 0.008434883676209422}
json_stats: {"train_loss": 0.006439898297300233, "val_loss": 0.008852424186676047, "epoch": 162, "lr": 0.001, "super_points": 2500, "chair": 0.008852424186676047}
json_stats: {"train_loss": 0.006604337985353435, "val_loss": 0.011572586459129355, "epoch": 163, "lr": 0.001, "super_points": 2500, "chair": 0.011572586459129355}
json_stats: {"train_loss": 0.0063252942992703, "val_loss": 0.010365830106270868, "epoch": 164, "lr": 0.001, "super_points": 2500, "chair": 0.010365830106270868}
json_stats: {"train_loss": 0.006240667112390784, "val_loss": 0.008850064345223958, "epoch": 165, "lr": 0.001, "super_points": 2500, "chair": 0.008850064345223958}
json_stats: {"train_loss": 0.0062685522333006645, "val_loss": 0.010745258330432482, "epoch": 166, "lr": 0.001, "super_points": 2500, "chair": 0.010745258330432482}
json_stats: {"train_loss": 0.006279211266733268, "val_loss": 0.01795589648793603, "epoch": 167, "lr": 0.001, "super_points": 2500, "chair": 0.01795589648793603}
json_stats: {"train_loss": 0.006183402221102048, "val_loss": 0.012520228512585163, "epoch": 168, "lr": 0.001, "super_points": 2500, "chair": 0.012520228512585163}
json_stats: {"train_loss": 0.006123739924720105, "val_loss": 0.008637118987132644, "epoch": 169, "lr": 0.001, "super_points": 2500, "chair": 0.008637118987132644}
json_stats: {"train_loss": 0.006056702339693028, "val_loss": 0.010726169249865898, "epoch": 170, "lr": 0.001, "super_points": 2500, "chair": 0.010726169249865898}
json_stats: {"train_loss": 0.006115389817996936, "val_loss": 0.010719840219894122, "epoch": 171, "lr": 0.001, "super_points": 2500, "chair": 0.010719840219894122}
json_stats: {"train_loss": 0.006106855443624013, "val_loss": 0.009763639680174895, "epoch": 172, "lr": 0.001, "super_points": 2500, "chair": 0.009763639680174895}
json_stats: {"train_loss": 0.006001015349893886, "val_loss": 0.014481927289865738, "epoch": 173, "lr": 0.001, "super_points": 2500, "chair": 0.014481927289865738}
json_stats: {"train_loss": 0.005985393547726905, "val_loss": 0.011982520890617094, "epoch": 174, "lr": 0.001, "super_points": 2500, "chair": 0.011982520890617094}
json_stats: {"train_loss": 0.006019604734747726, "val_loss": 0.018328190564589446, "epoch": 175, "lr": 0.001, "super_points": 2500, "chair": 0.018328190564589446}
json_stats: {"train_loss": 0.005998313010615461, "val_loss": 0.008140486459312745, "epoch": 176, "lr": 0.001, "super_points": 2500, "chair": 0.008140486459312745}
json_stats: {"train_loss": 0.005895539269070415, "val_loss": 0.027044616769566092, "epoch": 177, "lr": 0.001, "super_points": 2500, "chair": 0.027044616769566092}
json_stats: {"train_loss": 0.00586164283894879, "val_loss": 0.011575402302104373, "epoch": 178, "lr": 0.001, "super_points": 2500, "chair": 0.011575402302104373}
json_stats: {"train_loss": 0.005787613875616123, "val_loss": 0.0114453288314994, "epoch": 179, "lr": 0.001, "super_points": 2500, "chair": 0.0114453288314994}
json_stats: {"train_loss": 0.005818533459130456, "val_loss": 0.010472728361830462, "epoch": 180, "lr": 0.001, "super_points": 2500, "chair": 0.010472728361830462}
json_stats: {"train_loss": 0.005790363580865018, "val_loss": 0.009867755566225496, "epoch": 181, "lr": 0.001, "super_points": 2500, "chair": 0.009867755566225496}
json_stats: {"train_loss": 0.0057812882916015735, "val_loss": 0.021545197684751, "epoch": 182, "lr": 0.001, "super_points": 2500, "chair": 0.021545197684751}
json_stats: {"train_loss": 0.005732217773466426, "val_loss": 0.02497651319690915, "epoch": 183, "lr": 0.001, "super_points": 2500, "chair": 0.02497651319690915}
json_stats: {"train_loss": 0.005604910951874712, "val_loss": 0.008225715849115404, "epoch": 184, "lr": 0.001, "super_points": 2500, "chair": 0.008225715849115404}
json_stats: {"train_loss": 0.005752571192843949, "val_loss": 0.008041377417569938, "epoch": 185, "lr": 0.001, "super_points": 2500, "chair": 0.008041377417569938}
json_stats: {"train_loss": 0.00560004542417386, "val_loss": 0.007184065715951282, "epoch": 186, "lr": 0.001, "super_points": 2500, "chair": 0.007184065715951282}
json_stats: {"train_loss": 0.005627091757624465, "val_loss": 0.007823496872862412, "epoch": 187, "lr": 0.001, "super_points": 2500, "chair": 0.007823496872862412}
json_stats: {"train_loss": 0.005577175667071168, "val_loss": 0.008161276795489843, "epoch": 188, "lr": 0.001, "super_points": 2500, "chair": 0.008161276795489843}
json_stats: {"train_loss": 0.005533283762633801, "val_loss": 0.009993300188419431, "epoch": 189, "lr": 0.001, "super_points": 2500, "chair": 0.009993300188419431}
json_stats: {"train_loss": 0.005526674845639397, "val_loss": 0.007430095377183238, "epoch": 190, "lr": 0.001, "super_points": 2500, "chair": 0.007430095377183238}
json_stats: {"train_loss": 0.005462695263764437, "val_loss": 0.008727866712264543, "epoch": 191, "lr": 0.001, "super_points": 2500, "chair": 0.008727866712264543}
json_stats: {"train_loss": 0.0054623923168572435, "val_loss": 0.007976868070748657, "epoch": 192, "lr": 0.001, "super_points": 2500, "chair": 0.007976868070748657}
json_stats: {"train_loss": 0.005429424783762763, "val_loss": 0.0075938406097161215, "epoch": 193, "lr": 0.001, "super_points": 2500, "chair": 0.0075938406097161215}
json_stats: {"train_loss": 0.005492325025774977, "val_loss": 0.008029406522075797, "epoch": 194, "lr": 0.001, "super_points": 2500, "chair": 0.008029406522075797}
json_stats: {"train_loss": 0.005486708139891133, "val_loss": 0.009233855577402337, "epoch": 195, "lr": 0.001, "super_points": 2500, "chair": 0.009233855577402337}
json_stats: {"train_loss": 0.0054096019881613115, "val_loss": 0.010972128942782102, "epoch": 196, "lr": 0.001, "super_points": 2500, "chair": 0.010972128942782102}
json_stats: {"train_loss": 0.005315709009985714, "val_loss": 0.007976801556989897, "epoch": 197, "lr": 0.001, "super_points": 2500, "chair": 0.007976801556989897}
json_stats: {"train_loss": 0.00529506422497113, "val_loss": 0.007989174155735, "epoch": 198, "lr": 0.001, "super_points": 2500, "chair": 0.007989174155735}
json_stats: {"train_loss": 0.005242388488670044, "val_loss": 0.010227629546682502, "epoch": 199, "lr": 0.001, "super_points": 2500, "chair": 0.010227629546682502}
json_stats: {"train_loss": 0.005266126528765787, "val_loss": 0.009147944058789763, "epoch": 200, "lr": 0.001, "super_points": 2500, "chair": 0.009147944058789763}
json_stats: {"train_loss": 0.0052227159386829414, "val_loss": 0.019618692114775956, "epoch": 201, "lr": 0.001, "super_points": 2500, "chair": 0.019618692114775956}
json_stats: {"train_loss": 0.0052193852634552645, "val_loss": 0.007764590828311305, "epoch": 202, "lr": 0.001, "super_points": 2500, "chair": 0.007764590828311305}
json_stats: {"train_loss": 0.0052144722629557634, "val_loss": 0.009048342986335589, "epoch": 203, "lr": 0.001, "super_points": 2500, "chair": 0.009048342986335589}
json_stats: {"train_loss": 0.0052482143756659595, "val_loss": 0.014712266082507234, "epoch": 204, "lr": 0.001, "super_points": 2500, "chair": 0.014712266082507234}
json_stats: {"train_loss": 0.005165453023715493, "val_loss": 0.007406451890981475, "epoch": 205, "lr": 0.001, "super_points": 2500, "chair": 0.007406451890981475}
json_stats: {"train_loss": 0.0051750519942930515, "val_loss": 0.008048248607232127, "epoch": 206, "lr": 0.001, "super_points": 2500, "chair": 0.008048248607232127}
json_stats: {"train_loss": 0.005179255668019109, "val_loss": 0.009669930490037037, "epoch": 207, "lr": 0.001, "super_points": 2500, "chair": 0.009669930490037037}
json_stats: {"train_loss": 0.005080501766711035, "val_loss": 0.008195035863494458, "epoch": 208, "lr": 0.001, "super_points": 2500, "chair": 0.008195035863494458}
json_stats: {"train_loss": 0.00508949513108853, "val_loss": 0.007009298345723817, "epoch": 209, "lr": 0.001, "super_points": 2500, "chair": 0.007009298345723817}
json_stats: {"train_loss": 0.0050950926906593585, "val_loss": 0.006811950778112162, "epoch": 210, "lr": 0.001, "super_points": 2500, "chair": 0.006811950778112162}
json_stats: {"train_loss": 0.0049854383488897895, "val_loss": 0.008776340709436078, "epoch": 211, "lr": 0.001, "super_points": 2500, "chair": 0.008776340709436078}
json_stats: {"train_loss": 0.0050136639106580436, "val_loss": 0.00723387022654331, "epoch": 212, "lr": 0.001, "super_points": 2500, "chair": 0.00723387022654331}
json_stats: {"train_loss": 0.00498493885183159, "val_loss": 0.007150059262680453, "epoch": 213, "lr": 0.001, "super_points": 2500, "chair": 0.007150059262680453}
json_stats: {"train_loss": 0.0049531517961226845, "val_loss": 0.008583565794884465, "epoch": 214, "lr": 0.001, "super_points": 2500, "chair": 0.008583565794884465}
json_stats: {"train_loss": 0.0049780697507016795, "val_loss": 0.007062595532557299, "epoch": 215, "lr": 0.001, "super_points": 2500, "chair": 0.007062595532557299}
json_stats: {"train_loss": 0.004984563641140566, "val_loss": 0.007938023320897374, "epoch": 216, "lr": 0.001, "super_points": 2500, "chair": 0.007938023320897374}
json_stats: {"train_loss": 0.004935937781599077, "val_loss": 0.008122541855067708, "epoch": 217, "lr": 0.001, "super_points": 2500, "chair": 0.008122541855067708}
json_stats: {"train_loss": 0.004933242154691149, "val_loss": 0.0066926902874784415, "epoch": 218, "lr": 0.001, "super_points": 2500, "chair": 0.0066926902874784415}
json_stats: {"train_loss": 0.004871840216219425, "val_loss": 0.006678683596641519, "epoch": 219, "lr": 0.001, "super_points": 2500, "chair": 0.006678683596641519}
json_stats: {"train_loss": 0.004649153461351114, "val_loss": 0.005657947519360934, "epoch": 220, "lr": 0.001, "super_points": 2500, "chair": 0.005657947519360934}
json_stats: {"train_loss": 0.004541579698322012, "val_loss": 0.005629035243547933, "epoch": 221, "lr": 0.001, "super_points": 2500, "chair": 0.005629035243547933}
json_stats: {"train_loss": 0.004490739355028114, "val_loss": 0.0056177840546466585, "epoch": 222, "lr": 0.001, "super_points": 2500, "chair": 0.0056177840546466585}
json_stats: {"train_loss": 0.004480614395373885, "val_loss": 0.005591151629422986, "epoch": 223, "lr": 0.001, "super_points": 2500, "chair": 0.005591151629422986}
json_stats: {"train_loss": 0.004429451173500103, "val_loss": 0.005588928508290718, "epoch": 224, "lr": 0.001, "super_points": 2500, "chair": 0.005588928508290718}
json_stats: {"train_loss": 0.004405306609730948, "val_loss": 0.005591048572082506, "epoch": 225, "lr": 0.001, "super_points": 2500, "chair": 0.005591048572082506}
json_stats: {"train_loss": 0.004385101686998763, "val_loss": 0.00553070041242727, "epoch": 226, "lr": 0.001, "super_points": 2500, "chair": 0.00553070041242727}
json_stats: {"train_loss": 0.0043557054335799286, "val_loss": 0.005577421909588021, "epoch": 227, "lr": 0.001, "super_points": 2500, "chair": 0.005577421909588021}
json_stats: {"train_loss": 0.004357078724869472, "val_loss": 0.005549597402298173, "epoch": 228, "lr": 0.001, "super_points": 2500, "chair": 0.005549597402298173}
json_stats: {"train_loss": 0.004328990251045017, "val_loss": 0.005527526849534276, "epoch": 229, "lr": 0.001, "super_points": 2500, "chair": 0.005527526849534276}
json_stats: {"train_loss": 0.004313308060826624, "val_loss": 0.00552395359764612, "epoch": 230, "lr": 0.001, "super_points": 2500, "chair": 0.00552395359764612}
json_stats: {"train_loss": 0.004293502652195885, "val_loss": 0.005508400055818086, "epoch": 231, "lr": 0.001, "super_points": 2500, "chair": 0.005508400055818086}
json_stats: {"train_loss": 0.0042961406439323635, "val_loss": 0.005510053402462671, "epoch": 232, "lr": 0.001, "super_points": 2500, "chair": 0.005510053402462671}
json_stats: {"train_loss": 0.0042987105998155825, "val_loss": 0.005491179175848185, "epoch": 233, "lr": 0.001, "super_points": 2500, "chair": 0.005491179175848185}
json_stats: {"train_loss": 0.004294547642690732, "val_loss": 0.005472799259519508, "epoch": 234, "lr": 0.001, "super_points": 2500, "chair": 0.005472799259519508}
json_stats: {"train_loss": 0.00425303474698654, "val_loss": 0.005509504485268926, "epoch": 235, "lr": 0.001, "super_points": 2500, "chair": 0.005509504485268926}
json_stats: {"train_loss": 0.004265373779515571, "val_loss": 0.005450707622045694, "epoch": 236, "lr": 0.001, "super_points": 2500, "chair": 0.005450707622045694}
json_stats: {"train_loss": 0.004282253236948129, "val_loss": 0.0055117569430622945, "epoch": 237, "lr": 0.001, "super_points": 2500, "chair": 0.0055117569430622945}
json_stats: {"train_loss": 0.004245306774699951, "val_loss": 0.005532448098799864, "epoch": 238, "lr": 0.001, "super_points": 2500, "chair": 0.005532448098799864}
json_stats: {"train_loss": 0.004261877385022886, "val_loss": 0.005451167608762897, "epoch": 239, "lr": 0.001, "super_points": 2500, "chair": 0.005451167608762897}
json_stats: {"train_loss": 0.004258746334680302, "val_loss": 0.005487752461069545, "epoch": 240, "lr": 0.001, "super_points": 2500, "chair": 0.005487752461069545}
json_stats: {"train_loss": 0.004220058269086568, "val_loss": 0.005463239769343027, "epoch": 241, "lr": 0.001, "super_points": 2500, "chair": 0.005463239769343027}
json_stats: {"train_loss": 0.004206121797837755, "val_loss": 0.0054492087937285045, "epoch": 242, "lr": 0.001, "super_points": 2500, "chair": 0.0054492087937285045}
json_stats: {"train_loss": 0.004236895670456921, "val_loss": 0.005442766932943879, "epoch": 243, "lr": 0.001, "super_points": 2500, "chair": 0.005442766932943879}
json_stats: {"train_loss": 0.004211069914676687, "val_loss": 0.005448197480291128, "epoch": 244, "lr": 0.001, "super_points": 2500, "chair": 0.005448197480291128}
json_stats: {"train_loss": 0.004245677282211973, "val_loss": 0.005441580541691807, "epoch": 245, "lr": 0.001, "super_points": 2500, "chair": 0.005441580541691807}
json_stats: {"train_loss": 0.004212731283212847, "val_loss": 0.005457786989376642, "epoch": 246, "lr": 0.001, "super_points": 2500, "chair": 0.005457786989376642}
json_stats: {"train_loss": 0.004214349241160295, "val_loss": 0.00542237221393301, "epoch": 247, "lr": 0.001, "super_points": 2500, "chair": 0.00542237221393301}
json_stats: {"train_loss": 0.00415515600128428, "val_loss": 0.005434461831396749, "epoch": 248, "lr": 0.001, "super_points": 2500, "chair": 0.005434461831396749}
json_stats: {"train_loss": 0.0041799369966611264, "val_loss": 0.005415312555986781, "epoch": 249, "lr": 0.001, "super_points": 2500, "chair": 0.005415312555986781}
json_stats: {"train_loss": 0.004177062920130351, "val_loss": 0.005424519015346156, "epoch": 250, "lr": 0.001, "super_points": 2500, "chair": 0.005424519015346156}
json_stats: {"train_loss": 0.004178134624517577, "val_loss": 0.005423256672572258, "epoch": 251, "lr": 0.001, "super_points": 2500, "chair": 0.005423256672572258}
json_stats: {"train_loss": 0.004177906691534993, "val_loss": 0.005414131167886215, "epoch": 252, "lr": 0.001, "super_points": 2500, "chair": 0.005414131167886215}
json_stats: {"train_loss": 0.004133312684922096, "val_loss": 0.005417325393145167, "epoch": 253, "lr": 0.001, "super_points": 2500, "chair": 0.005417325393145167}
json_stats: {"train_loss": 0.0041484188918462575, "val_loss": 0.0054307984523908346, "epoch": 254, "lr": 0.001, "super_points": 2500, "chair": 0.0054307984523908346}
json_stats: {"train_loss": 0.004149887836812174, "val_loss": 0.005403290600191022, "epoch": 255, "lr": 0.001, "super_points": 2500, "chair": 0.005403290600191022}
json_stats: {"train_loss": 0.0041409100816749474, "val_loss": 0.005389724814787854, "epoch": 256, "lr": 0.001, "super_points": 2500, "chair": 0.005389724814787854}
json_stats: {"train_loss": 0.004139248509069576, "val_loss": 0.005408154150774312, "epoch": 257, "lr": 0.001, "super_points": 2500, "chair": 0.005408154150774312}
json_stats: {"train_loss": 0.00412768477382248, "val_loss": 0.005399082971433568, "epoch": 258, "lr": 0.001, "super_points": 2500, "chair": 0.005399082971433568}
json_stats: {"train_loss": 0.004123933225705781, "val_loss": 0.005429672759546097, "epoch": 259, "lr": 0.001, "super_points": 2500, "chair": 0.005429672759546097}
json_stats: {"train_loss": 0.004132735510082806, "val_loss": 0.005434379582618212, "epoch": 260, "lr": 0.001, "super_points": 2500, "chair": 0.005434379582618212}
json_stats: {"train_loss": 0.004090308096698102, "val_loss": 0.005436938321001308, "epoch": 261, "lr": 0.001, "super_points": 2500, "chair": 0.005436938321001308}
json_stats: {"train_loss": 0.004086422095732654, "val_loss": 0.005391703550378943, "epoch": 262, "lr": 0.001, "super_points": 2500, "chair": 0.005391703550378943}
json_stats: {"train_loss": 0.004109699054456809, "val_loss": 0.005397685863034323, "epoch": 263, "lr": 0.001, "super_points": 2500, "chair": 0.005397685863034323}
json_stats: {"train_loss": 0.004090894262909013, "val_loss": 0.005401842577686143, "epoch": 264, "lr": 0.001, "super_points": 2500, "chair": 0.005401842577686143}
json_stats: {"train_loss": 0.004109196530600242, "val_loss": 0.005424809750429419, "epoch": 265, "lr": 0.001, "super_points": 2500, "chair": 0.005424809750429419}
json_stats: {"train_loss": 0.0040958807009327065, "val_loss": 0.005400025502367075, "epoch": 266, "lr": 0.001, "super_points": 2500, "chair": 0.005400025502367075}
json_stats: {"train_loss": 0.004088709900593933, "val_loss": 0.005435739995825083, "epoch": 267, "lr": 0.001, "super_points": 2500, "chair": 0.005435739995825083}
json_stats: {"train_loss": 0.004085699214106973, "val_loss": 0.0054229086449066564, "epoch": 268, "lr": 0.001, "super_points": 2500, "chair": 0.0054229086449066564}
json_stats: {"train_loss": 0.004067475939005175, "val_loss": 0.0053791519752595315, "epoch": 269, "lr": 0.001, "super_points": 2500, "chair": 0.0053791519752595315}
json_stats: {"train_loss": 0.004054019609740113, "val_loss": 0.005358239061870548, "epoch": 270, "lr": 0.001, "super_points": 2500, "chair": 0.005358239061870548}
json_stats: {"train_loss": 0.004038038730676122, "val_loss": 0.0053918613066766844, "epoch": 271, "lr": 0.001, "super_points": 2500, "chair": 0.0053918613066766844}
json_stats: {"train_loss": 0.004034695310025092, "val_loss": 0.005403552951594425, "epoch": 272, "lr": 0.001, "super_points": 2500, "chair": 0.005403552951594425}
json_stats: {"train_loss": 0.0040435528232003835, "val_loss": 0.005365063360524039, "epoch": 273, "lr": 0.001, "super_points": 2500, "chair": 0.005365063360524039}
json_stats: {"train_loss": 0.004040748467121054, "val_loss": 0.005371735241740595, "epoch": 274, "lr": 0.001, "super_points": 2500, "chair": 0.005371735241740595}
json_stats: {"train_loss": 0.004049200133201392, "val_loss": 0.005394149192630551, "epoch": 275, "lr": 0.001, "super_points": 2500, "chair": 0.005394149192630551}
json_stats: {"train_loss": 0.004026448515736881, "val_loss": 0.005387843526943132, "epoch": 276, "lr": 0.001, "super_points": 2500, "chair": 0.005387843526943132}
json_stats: {"train_loss": 0.00401391287553398, "val_loss": 0.00538596625678068, "epoch": 277, "lr": 0.001, "super_points": 2500, "chair": 0.00538596625678068}
json_stats: {"train_loss": 0.0040167444097973844, "val_loss": 0.005389844413933365, "epoch": 278, "lr": 0.001, "super_points": 2500, "chair": 0.005389844413933365}
json_stats: {"train_loss": 0.004025634864399976, "val_loss": 0.005375883671953235, "epoch": 279, "lr": 0.001, "super_points": 2500, "chair": 0.005375883671953235}
json_stats: {"train_loss": 0.003992351133595495, "val_loss": 0.005341300480934077, "epoch": 280, "lr": 0.001, "super_points": 2500, "chair": 0.005341300480934077}
json_stats: {"train_loss": 0.003996332932044478, "val_loss": 0.0053342525186666915, "epoch": 281, "lr": 0.001, "super_points": 2500, "chair": 0.0053342525186666915}
json_stats: {"train_loss": 0.0039932337603257855, "val_loss": 0.005374404715460746, "epoch": 282, "lr": 0.001, "super_points": 2500, "chair": 0.005374404715460746}
json_stats: {"train_loss": 0.003969414192525779, "val_loss": 0.005345626896637124, "epoch": 283, "lr": 0.001, "super_points": 2500, "chair": 0.005345626896637124}
json_stats: {"train_loss": 0.003971850843278363, "val_loss": 0.005364977034501905, "epoch": 284, "lr": 0.001, "super_points": 2500, "chair": 0.005364977034501905}
json_stats: {"train_loss": 0.003995150916607064, "val_loss": 0.005343540057236719, "epoch": 285, "lr": 0.001, "super_points": 2500, "chair": 0.005343540057236719}
json_stats: {"train_loss": 0.003990720143979963, "val_loss": 0.00536483462336798, "epoch": 286, "lr": 0.001, "super_points": 2500, "chair": 0.00536483462336798}
json_stats: {"train_loss": 0.003994447411969304, "val_loss": 0.005349099408661903, "epoch": 287, "lr": 0.001, "super_points": 2500, "chair": 0.005349099408661903}
json_stats: {"train_loss": 0.00398236281128929, "val_loss": 0.005343706444512273, "epoch": 288, "lr": 0.001, "super_points": 2500, "chair": 0.005343706444512273}
json_stats: {"train_loss": 0.003967718797845438, "val_loss": 0.005344462705516192, "epoch": 289, "lr": 0.001, "super_points": 2500, "chair": 0.005344462705516192}
json_stats: {"train_loss": 0.003967406326795326, "val_loss": 0.005351256795747336, "epoch": 290, "lr": 0.001, "super_points": 2500, "chair": 0.005351256795747336}
json_stats: {"train_loss": 0.003964826954966959, "val_loss": 0.005379364273489215, "epoch": 291, "lr": 0.001, "super_points": 2500, "chair": 0.005379364273489215}
json_stats: {"train_loss": 0.003940856155446347, "val_loss": 0.005360821727663279, "epoch": 292, "lr": 0.001, "super_points": 2500, "chair": 0.005360821727663279}
json_stats: {"train_loss": 0.0039361955871915115, "val_loss": 0.005348953467165661, "epoch": 293, "lr": 0.001, "super_points": 2500, "chair": 0.005348953467165661}
json_stats: {"train_loss": 0.00395996978999499, "val_loss": 0.005379018904424684, "epoch": 294, "lr": 0.001, "super_points": 2500, "chair": 0.005379018904424684}
json_stats: {"train_loss": 0.003942404205308241, "val_loss": 0.005346611559087801, "epoch": 295, "lr": 0.001, "super_points": 2500, "chair": 0.005346611559087801}
json_stats: {"train_loss": 0.003911899245234535, "val_loss": 0.005363310681829272, "epoch": 296, "lr": 0.001, "super_points": 2500, "chair": 0.005363310681829272}
json_stats: {"train_loss": 0.00394039420027505, "val_loss": 0.005350494286218701, "epoch": 297, "lr": 0.001, "super_points": 2500, "chair": 0.005350494286218701}
json_stats: {"train_loss": 0.0039008771014564176, "val_loss": 0.005354763133191439, "epoch": 298, "lr": 0.001, "super_points": 2500, "chair": 0.005354763133191439}
json_stats: {"train_loss": 0.003899614711511223, "val_loss": 0.005344992812159796, "epoch": 299, "lr": 0.001, "super_points": 2500, "chair": 0.005344992812159796}
json_stats: {"train_loss": 0.00394438726361841, "val_loss": 0.005366379335565969, "epoch": 300, "lr": 0.001, "super_points": 2500, "chair": 0.005366379335565969}
json_stats: {"train_loss": 0.0038897932342746677, "val_loss": 0.005316144575603133, "epoch": 301, "lr": 0.001, "super_points": 2500, "chair": 0.005316144575603133}
json_stats: {"train_loss": 0.003898519091308117, "val_loss": 0.005348509275029565, "epoch": 302, "lr": 0.001, "super_points": 2500, "chair": 0.005348509275029565}
json_stats: {"train_loss": 0.0039172069279148295, "val_loss": 0.005350098349587168, "epoch": 303, "lr": 0.001, "super_points": 2500, "chair": 0.005350098349587168}
json_stats: {"train_loss": 0.0038935126558713178, "val_loss": 0.005322293232216738, "epoch": 304, "lr": 0.001, "super_points": 2500, "chair": 0.005322293232216738}
json_stats: {"train_loss": 0.0038970132673378376, "val_loss": 0.005334312388630107, "epoch": 305, "lr": 0.001, "super_points": 2500, "chair": 0.005334312388630107}
json_stats: {"train_loss": 0.003875363400370321, "val_loss": 0.005358750412110673, "epoch": 306, "lr": 0.001, "super_points": 2500, "chair": 0.005358750412110673}
json_stats: {"train_loss": 0.0038866146604585295, "val_loss": 0.005343125125956397, "epoch": 307, "lr": 0.001, "super_points": 2500, "chair": 0.005343125125956397}
json_stats: {"train_loss": 0.00387055454775691, "val_loss": 0.005339787401215628, "epoch": 308, "lr": 0.001, "super_points": 2500, "chair": 0.005339787401215628}
json_stats: {"train_loss": 0.003878604974049856, "val_loss": 0.0053624428299710505, "epoch": 309, "lr": 0.001, "super_points": 2500, "chair": 0.0053624428299710505}
json_stats: {"train_loss": 0.003881549388718079, "val_loss": 0.005334981543899968, "epoch": 310, "lr": 0.001, "super_points": 2500, "chair": 0.005334981543899968}
json_stats: {"train_loss": 0.0038708719452295232, "val_loss": 0.005347163183614612, "epoch": 311, "lr": 0.001, "super_points": 2500, "chair": 0.005347163183614612}
json_stats: {"train_loss": 0.0038451536380521515, "val_loss": 0.0053478174647966096, "epoch": 312, "lr": 0.001, "super_points": 2500, "chair": 0.0053478174647966096}
json_stats: {"train_loss": 0.0038607671500786264, "val_loss": 0.005338572209354403, "epoch": 313, "lr": 0.001, "super_points": 2500, "chair": 0.005338572209354403}
json_stats: {"train_loss": 0.0038335423108519, "val_loss": 0.005298433338053698, "epoch": 314, "lr": 0.001, "super_points": 2500, "chair": 0.005298433338053698}
json_stats: {"train_loss": 0.0038560318719486103, "val_loss": 0.005308878521413304, "epoch": 315, "lr": 0.001, "super_points": 2500, "chair": 0.005308878521413304}
json_stats: {"train_loss": 0.0038458455956595786, "val_loss": 0.005333286915840798, "epoch": 316, "lr": 0.001, "super_points": 2500, "chair": 0.005333286915840798}
json_stats: {"train_loss": 0.0038195478565552655, "val_loss": 0.0053618780478055395, "epoch": 317, "lr": 0.001, "super_points": 2500, "chair": 0.0053618780478055395}
json_stats: {"train_loss": 0.0038312057896024163, "val_loss": 0.005294043857734217, "epoch": 318, "lr": 0.001, "super_points": 2500, "chair": 0.005294043857734217}
json_stats: {"train_loss": 0.0038488566601539357, "val_loss": 0.005338791617040717, "epoch": 319, "lr": 0.001, "super_points": 2500, "chair": 0.005338791617040717}
json_stats: {"train_loss": 0.003854387397330035, "val_loss": 0.005318245574355472, "epoch": 320, "lr": 0.001, "super_points": 2500, "chair": 0.005318245574355472}
json_stats: {"train_loss": 0.0038178233580444666, "val_loss": 0.0053168890434642175, "epoch": 321, "lr": 0.001, "super_points": 2500, "chair": 0.0053168890434642175}
json_stats: {"train_loss": 0.0038683321915895623, "val_loss": 0.0053874241502219165, "epoch": 322, "lr": 0.001, "super_points": 2500, "chair": 0.0053874241502219165}
json_stats: {"train_loss": 0.0038278435014516992, "val_loss": 0.0053320428692237585, "epoch": 323, "lr": 0.001, "super_points": 2500, "chair": 0.0053320428692237585}
json_stats: {"train_loss": 0.0038013385690967827, "val_loss": 0.00532952137832898, "epoch": 324, "lr": 0.001, "super_points": 2500, "chair": 0.00532952137832898}
json_stats: {"train_loss": 0.0038261871702749937, "val_loss": 0.00528926124558026, "epoch": 325, "lr": 0.001, "super_points": 2500, "chair": 0.00528926124558026}
json_stats: {"train_loss": 0.0037882280919481724, "val_loss": 0.0053185484707788675, "epoch": 326, "lr": 0.001, "super_points": 2500, "chair": 0.0053185484707788675}
json_stats: {"train_loss": 0.0037978849675068082, "val_loss": 0.005320579322531473, "epoch": 327, "lr": 0.001, "super_points": 2500, "chair": 0.005320579322531473}
json_stats: {"train_loss": 0.0038185056792024302, "val_loss": 0.005297760684909516, "epoch": 328, "lr": 0.001, "super_points": 2500, "chair": 0.005297760684909516}
json_stats: {"train_loss": 0.0037768160335390883, "val_loss": 0.005328162080543332, "epoch": 329, "lr": 0.001, "super_points": 2500, "chair": 0.005328162080543332}
json_stats: {"train_loss": 0.0038093301399117884, "val_loss": 0.005318425731126999, "epoch": 330, "lr": 0.001, "super_points": 2500, "chair": 0.005318425731126999}
json_stats: {"train_loss": 0.003808421070468338, "val_loss": 0.005342019126252379, "epoch": 331, "lr": 0.001, "super_points": 2500, "chair": 0.005342019126252379}
json_stats: {"train_loss": 0.0038033558137934, "val_loss": 0.005310159555614688, "epoch": 332, "lr": 0.001, "super_points": 2500, "chair": 0.005310159555614688}
json_stats: {"train_loss": 0.0037436633261249347, "val_loss": 0.005312666448569575, "epoch": 333, "lr": 0.001, "super_points": 2500, "chair": 0.005312666448569575}
json_stats: {"train_loss": 0.0037769029834581647, "val_loss": 0.0053245438002916265, "epoch": 334, "lr": 0.001, "super_points": 2500, "chair": 0.0053245438002916265}
json_stats: {"train_loss": 0.003792439691503258, "val_loss": 0.005339335298252313, "epoch": 335, "lr": 0.001, "super_points": 2500, "chair": 0.005339335298252313}
json_stats: {"train_loss": 0.0037811610477921716, "val_loss": 0.005323037743395151, "epoch": 336, "lr": 0.001, "super_points": 2500, "chair": 0.005323037743395151}
json_stats: {"train_loss": 0.003778153086793335, "val_loss": 0.005291977724017099, "epoch": 337, "lr": 0.001, "super_points": 2500, "chair": 0.005291977724017099}
json_stats: {"train_loss": 0.0037592011846273262, "val_loss": 0.00531244981319232, "epoch": 338, "lr": 0.001, "super_points": 2500, "chair": 0.00531244981319232}
json_stats: {"train_loss": 0.003743751401848653, "val_loss": 0.0053342229058576185, "epoch": 339, "lr": 0.001, "super_points": 2500, "chair": 0.0053342229058576185}
json_stats: {"train_loss": 0.0037572347545338906, "val_loss": 0.005290880658512198, "epoch": 340, "lr": 0.001, "super_points": 2500, "chair": 0.005290880658512198}
json_stats: {"train_loss": 0.0037481990725021152, "val_loss": 0.0052883406223859205, "epoch": 341, "lr": 0.001, "super_points": 2500, "chair": 0.0052883406223859205}
json_stats: {"train_loss": 0.00376353221534587, "val_loss": 0.005311375787091809, "epoch": 342, "lr": 0.001, "super_points": 2500, "chair": 0.005311375787091809}
json_stats: {"train_loss": 0.0037511393811334582, "val_loss": 0.005327466588337408, "epoch": 343, "lr": 0.001, "super_points": 2500, "chair": 0.005327466588337408}
json_stats: {"train_loss": 0.003731637226198526, "val_loss": 0.005356054233257161, "epoch": 344, "lr": 0.001, "super_points": 2500, "chair": 0.005356054233257161}
json_stats: {"train_loss": 0.003718133092693546, "val_loss": 0.005319653490428315, "epoch": 345, "lr": 0.001, "super_points": 2500, "chair": 0.005319653490428315}
json_stats: {"train_loss": 0.0037286139435737447, "val_loss": 0.005340377664799953, "epoch": 346, "lr": 0.001, "super_points": 2500, "chair": 0.005340377664799953}
json_stats: {"train_loss": 0.003746078392107259, "val_loss": 0.005310238869644181, "epoch": 347, "lr": 0.001, "super_points": 2500, "chair": 0.005310238869644181}
json_stats: {"train_loss": 0.003717923877925119, "val_loss": 0.005331740422217652, "epoch": 348, "lr": 0.001, "super_points": 2500, "chair": 0.005331740422217652}
json_stats: {"train_loss": 0.003747709932298783, "val_loss": 0.005342146435882463, "epoch": 349, "lr": 0.001, "super_points": 2500, "chair": 0.005342146435882463}
json_stats: {"train_loss": 0.00371530677383656, "val_loss": 0.005314731001204183, "epoch": 350, "lr": 0.001, "super_points": 2500, "chair": 0.005314731001204183}
json_stats: {"train_loss": 0.003718273332068587, "val_loss": 0.0053385504532258874, "epoch": 351, "lr": 0.001, "super_points": 2500, "chair": 0.0053385504532258874}
json_stats: {"train_loss": 0.0036975185838801898, "val_loss": 0.005305461482643042, "epoch": 352, "lr": 0.001, "super_points": 2500, "chair": 0.005305461482643042}
json_stats: {"train_loss": 0.003714647374170668, "val_loss": 0.0053712690768893375, "epoch": 353, "lr": 0.001, "super_points": 2500, "chair": 0.0053712690768893375}
json_stats: {"train_loss": 0.0037035539759980407, "val_loss": 0.00532542763624427, "epoch": 354, "lr": 0.001, "super_points": 2500, "chair": 0.00532542763624427}
json_stats: {"train_loss": 0.003688570869374363, "val_loss": 0.005299153488649185, "epoch": 355, "lr": 0.001, "super_points": 2500, "chair": 0.005299153488649185}
json_stats: {"train_loss": 0.0037075062501518165, "val_loss": 0.005306278100930328, "epoch": 356, "lr": 0.001, "super_points": 2500, "chair": 0.005306278100930328}
json_stats: {"train_loss": 0.0036949716864482446, "val_loss": 0.005309575627189736, "epoch": 357, "lr": 0.001, "super_points": 2500, "chair": 0.005309575627189736}
json_stats: {"train_loss": 0.003700205422116115, "val_loss": 0.00531951107929439, "epoch": 358, "lr": 0.001, "super_points": 2500, "chair": 0.00531951107929439}
json_stats: {"train_loss": 0.0036770386977449934, "val_loss": 0.005353278415494187, "epoch": 359, "lr": 0.001, "super_points": 2500, "chair": 0.005353278415494187}
json_stats: {"train_loss": 0.003654818932580597, "val_loss": 0.005314162953994995, "epoch": 360, "lr": 0.001, "super_points": 2500, "chair": 0.005314162953994995}
json_stats: {"train_loss": 0.003666615495732164, "val_loss": 0.005276937687466311, "epoch": 361, "lr": 0.001, "super_points": 2500, "chair": 0.005276937687466311}
json_stats: {"train_loss": 0.0036813184687429492, "val_loss": 0.005312038130711677, "epoch": 362, "lr": 0.001, "super_points": 2500, "chair": 0.005312038130711677}
json_stats: {"train_loss": 0.0036706176969934913, "val_loss": 0.005298105566654094, "epoch": 363, "lr": 0.001, "super_points": 2500, "chair": 0.005298105566654094}
json_stats: {"train_loss": 0.0036679271225105313, "val_loss": 0.005273077577395841, "epoch": 364, "lr": 0.001, "super_points": 2500, "chair": 0.005273077577395841}
json_stats: {"train_loss": 0.0036724147277281565, "val_loss": 0.005301347473463, "epoch": 365, "lr": 0.001, "super_points": 2500, "chair": 0.005301347473463}
json_stats: {"train_loss": 0.003687770033310003, "val_loss": 0.005291775139698455, "epoch": 366, "lr": 0.001, "super_points": 2500, "chair": 0.005291775139698455}
json_stats: {"train_loss": 0.003658984376884559, "val_loss": 0.005294864103847811, "epoch": 367, "lr": 0.001, "super_points": 2500, "chair": 0.005294864103847811}
json_stats: {"train_loss": 0.0036623664063346736, "val_loss": 0.005321869290931974, "epoch": 368, "lr": 0.001, "super_points": 2500, "chair": 0.005321869290931974}
json_stats: {"train_loss": 0.003640317156746545, "val_loss": 0.005318004627127287, "epoch": 369, "lr": 0.001, "super_points": 2500, "chair": 0.005318004627127287}
json_stats: {"train_loss": 0.0036429640480919795, "val_loss": 0.00527406959837779, "epoch": 370, "lr": 0.001, "super_points": 2500, "chair": 0.00527406959837779}
json_stats: {"train_loss": 0.003603085733073599, "val_loss": 0.005284211197651403, "epoch": 371, "lr": 0.001, "super_points": 2500, "chair": 0.005284211197651403}
json_stats: {"train_loss": 0.003655448747689233, "val_loss": 0.005279927492834801, "epoch": 372, "lr": 0.001, "super_points": 2500, "chair": 0.005279927492834801}
json_stats: {"train_loss": 0.003643771237693727, "val_loss": 0.0052975039214415605, "epoch": 373, "lr": 0.001, "super_points": 2500, "chair": 0.0052975039214415605}
json_stats: {"train_loss": 0.003653360113008496, "val_loss": 0.005296641029417515, "epoch": 374, "lr": 0.001, "super_points": 2500, "chair": 0.005296641029417515}
json_stats: {"train_loss": 0.0036350033588378747, "val_loss": 0.005297201707266098, "epoch": 375, "lr": 0.001, "super_points": 2500, "chair": 0.005297201707266098}
json_stats: {"train_loss": 0.0036531848613830173, "val_loss": 0.005306314536218726, "epoch": 376, "lr": 0.001, "super_points": 2500, "chair": 0.005306314536218726}
json_stats: {"train_loss": 0.003635109544676893, "val_loss": 0.005284722380036878, "epoch": 377, "lr": 0.001, "super_points": 2500, "chair": 0.005284722380036878}
json_stats: {"train_loss": 0.0036104181165094763, "val_loss": 0.005297051379890289, "epoch": 378, "lr": 0.001, "super_points": 2500, "chair": 0.005297051379890289}
json_stats: {"train_loss": 0.0036185214159024114, "val_loss": 0.00529790357253406, "epoch": 379, "lr": 0.001, "super_points": 2500, "chair": 0.00529790357253406}
json_stats: {"train_loss": 0.0036215738845331706, "val_loss": 0.005263155299173885, "epoch": 380, "lr": 0.001, "super_points": 2500, "chair": 0.005263155299173885}
json_stats: {"train_loss": 0.00359392682884765, "val_loss": 0.005255823976598507, "epoch": 381, "lr": 0.001, "super_points": 2500, "chair": 0.005255823976598507}
json_stats: {"train_loss": 0.0036216994240770447, "val_loss": 0.00528780682835468, "epoch": 382, "lr": 0.001, "super_points": 2500, "chair": 0.00528780682835468}
json_stats: {"train_loss": 0.0036006517201552495, "val_loss": 0.005252338826742976, "epoch": 383, "lr": 0.001, "super_points": 2500, "chair": 0.005252338826742976}
json_stats: {"train_loss": 0.00356837162090575, "val_loss": 0.00526307265512472, "epoch": 384, "lr": 0.001, "super_points": 2500, "chair": 0.00526307265512472}
json_stats: {"train_loss": 0.0036072447896003724, "val_loss": 0.005274539656373997, "epoch": 385, "lr": 0.001, "super_points": 2500, "chair": 0.005274539656373997}
json_stats: {"train_loss": 0.0035805737859952976, "val_loss": 0.005282295304675435, "epoch": 386, "lr": 0.001, "super_points": 2500, "chair": 0.005282295304675435}
json_stats: {"train_loss": 0.0035869432585861755, "val_loss": 0.005305110661009717, "epoch": 387, "lr": 0.001, "super_points": 2500, "chair": 0.005305110661009717}
json_stats: {"train_loss": 0.0036020911915008638, "val_loss": 0.00529128881604519, "epoch": 388, "lr": 0.001, "super_points": 2500, "chair": 0.00529128881604519}
json_stats: {"train_loss": 0.0035664288491448937, "val_loss": 0.005311987519827347, "epoch": 389, "lr": 0.001, "super_points": 2500, "chair": 0.005311987519827347}
json_stats: {"train_loss": 0.00357376732315649, "val_loss": 0.005311015316523438, "epoch": 390, "lr": 0.001, "super_points": 2500, "chair": 0.005311015316523438}
json_stats: {"train_loss": 0.0035904002773082433, "val_loss": 0.00530726925015103, "epoch": 391, "lr": 0.001, "super_points": 2500, "chair": 0.00530726925015103}
json_stats: {"train_loss": 0.0035705551820094973, "val_loss": 0.005285343404339496, "epoch": 392, "lr": 0.001, "super_points": 2500, "chair": 0.005285343404339496}
json_stats: {"train_loss": 0.003552231461028842, "val_loss": 0.005323103369148665, "epoch": 393, "lr": 0.001, "super_points": 2500, "chair": 0.005323103369148665}
json_stats: {"train_loss": 0.0035750014488311376, "val_loss": 0.005302353735016876, "epoch": 394, "lr": 0.001, "super_points": 2500, "chair": 0.005302353735016876}
json_stats: {"train_loss": 0.0035713510478244106, "val_loss": 0.005289307513902354, "epoch": 395, "lr": 0.001, "super_points": 2500, "chair": 0.005289307513902354}
json_stats: {"train_loss": 0.0035597421598675496, "val_loss": 0.005320537716236918, "epoch": 396, "lr": 0.001, "super_points": 2500, "chair": 0.005320537716236918}
json_stats: {"train_loss": 0.003529557978789158, "val_loss": 0.005299076892782089, "epoch": 397, "lr": 0.001, "super_points": 2500, "chair": 0.005299076892782089}
json_stats: {"train_loss": 0.0035664910395794055, "val_loss": 0.00529899291131039, "epoch": 398, "lr": 0.001, "super_points": 2500, "chair": 0.00529899291131039}
json_stats: {"train_loss": 0.0035359037985258244, "val_loss": 0.005289950792482773, "epoch": 399, "lr": 0.001, "super_points": 2500, "chair": 0.005289950792482773}
json_stats: {"train_loss": 0.0035514989621279872, "val_loss": 0.005304813233399114, "epoch": 400, "lr": 0.001, "super_points": 2500, "chair": 0.005304813233399114}
json_stats: {"train_loss": 0.0035250138642047256, "val_loss": 0.005303661533912947, "epoch": 401, "lr": 0.001, "super_points": 2500, "chair": 0.005303661533912947}
json_stats: {"train_loss": 0.0035497472731067852, "val_loss": 0.005278031368804879, "epoch": 402, "lr": 0.001, "super_points": 2500, "chair": 0.005278031368804879}
json_stats: {"train_loss": 0.003542154626099064, "val_loss": 0.005295213885865239, "epoch": 403, "lr": 0.001, "super_points": 2500, "chair": 0.005295213885865239}
json_stats: {"train_loss": 0.0035488810130011508, "val_loss": 0.005288970429277004, "epoch": 404, "lr": 0.001, "super_points": 2500, "chair": 0.005288970429277004}
json_stats: {"train_loss": 0.0035469159935874973, "val_loss": 0.005296837657603414, "epoch": 405, "lr": 0.001, "super_points": 2500, "chair": 0.005296837657603414}
json_stats: {"train_loss": 0.0035156312686226822, "val_loss": 0.005296194785122954, "epoch": 406, "lr": 0.001, "super_points": 2500, "chair": 0.005296194785122954}
json_stats: {"train_loss": 0.0035590966095161787, "val_loss": 0.005284225113343361, "epoch": 407, "lr": 0.001, "super_points": 2500, "chair": 0.005284225113343361}
json_stats: {"train_loss": 0.003525522885405842, "val_loss": 0.005283030334773452, "epoch": 408, "lr": 0.001, "super_points": 2500, "chair": 0.005283030334773452}
json_stats: {"train_loss": 0.0035318356472998857, "val_loss": 0.005331545115210289, "epoch": 409, "lr": 0.001, "super_points": 2500, "chair": 0.005331545115210289}
json_stats: {"train_loss": 0.0035272723570575607, "val_loss": 0.0052846741137029815, "epoch": 410, "lr": 0.001, "super_points": 2500, "chair": 0.0052846741137029815}
json_stats: {"train_loss": 0.0035258509191300937, "val_loss": 0.005286557302095516, "epoch": 411, "lr": 0.001, "super_points": 2500, "chair": 0.005286557302095516}
json_stats: {"train_loss": 0.003506782538641025, "val_loss": 0.005282208919091974, "epoch": 412, "lr": 0.001, "super_points": 2500, "chair": 0.005282208919091974}
json_stats: {"train_loss": 0.003532713613308528, "val_loss": 0.005278355257888866, "epoch": 413, "lr": 0.001, "super_points": 2500, "chair": 0.005278355257888866}
json_stats: {"train_loss": 0.003502900101354017, "val_loss": 0.005276996030493877, "epoch": 414, "lr": 0.001, "super_points": 2500, "chair": 0.005276996030493877}
json_stats: {"train_loss": 0.003508603638585876, "val_loss": 0.005279770732835629, "epoch": 415, "lr": 0.001, "super_points": 2500, "chair": 0.005279770732835629}
json_stats: {"train_loss": 0.003508457635967609, "val_loss": 0.005262828708171498, "epoch": 416, "lr": 0.001, "super_points": 2500, "chair": 0.005262828708171498}
json_stats: {"train_loss": 0.0034877227194716827, "val_loss": 0.005273080300972905, "epoch": 417, "lr": 0.001, "super_points": 2500, "chair": 0.005273080300972905}
json_stats: {"train_loss": 0.0034946109633892776, "val_loss": 0.005289320341246419, "epoch": 418, "lr": 0.001, "super_points": 2500, "chair": 0.005289320341246419}
json_stats: {"train_loss": 0.003513614259495893, "val_loss": 0.005285270235956062, "epoch": 419, "lr": 0.001, "super_points": 2500, "chair": 0.005285270235956062}
Subnet1(
  (deformNet1): DeformNet(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
  (error_estimator): Error_Estimator(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
)
Subnet1(
  (deformNet1): DeformNet(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
  (error_estimator): Error_Estimator(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
)
Subnet1(
  (deformNet1): DeformNet(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
  (error_estimator): Error_Estimator(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
)
Subnet1(
  (deformNet1): DeformNet(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
  (error_estimator): Error_Estimator(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
)
Subnet1(
  (deformNet1): DeformNet(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
  (error_estimator): Error_Estimator(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
)
Subnet1(
  (deformNet1): DeformNet(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
  (error_estimator): Error_Estimator(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
)
Subnet1(
  (deformNet1): DeformNet(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
  (error_estimator): Error_Estimator(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
)
Subnet1(
  (deformNet1): DeformNet(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
  (error_estimator): Error_Estimator(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
)
Subnet1(
  (deformNet1): DeformNet(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
  (error_estimator): Error_Estimator(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
)
Subnet1(
  (deformNet1): DeformNet(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
  (error_estimator): Error_Estimator(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
)
Subnet1(
  (deformNet1): DeformNet(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
  (error_estimator): Error_Estimator(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
)
Subnet1(
  (deformNet1): DeformNet(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
  (error_estimator): Error_Estimator(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
)
Subnet1(
  (deformNet1): DeformNet(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
  (error_estimator): Error_Estimator(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
)
Subnet1(
  (deformNet1): DeformNet(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
  (error_estimator): Error_Estimator(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
)
Subnet1(
  (deformNet1): DeformNet(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
  (error_estimator): Error_Estimator(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
)
Subnet1(
  (deformNet1): DeformNet(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
  (error_estimator): Error_Estimator(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
)
Subnet1(
  (deformNet1): DeformNet(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
  (error_estimator): Error_Estimator(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
)
Subnet1(
  (deformNet1): DeformNet(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
  (error_estimator): Error_Estimator(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
    (sig): Sigmoid()
  )
)
Subnet1(
  (deformNet1): DeformNet(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
  (error_estimator): Error_Estimator(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
    (sig): Sigmoid()
  )
)
Subnet1(
  (deformNet1): DeformNet(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
  (error_estimator): Error_Estimator(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
    (sig): Sigmoid()
  )
)
Subnet1(
  (deformNet1): DeformNet(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
    (th): Tanh()
  )
  (error_estimator): Error_Estimator(
    (conv_layer1): Conv_layer(
      (conv): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer2): Conv_layer(
      (conv): Conv1d(1027, 513, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(513, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv_layer3): Conv_layer(
      (conv): Conv1d(513, 256, kernel_size=(1,), stride=(1,))
      (bn): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv4): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
    (sig): Sigmoid()
  )
)
